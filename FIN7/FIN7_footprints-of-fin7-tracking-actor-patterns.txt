footprints of fin7: tracking actor patterns (part 1)
july 25, 2017 by: justin warner, stephen hinck
tags: fin7 threat research
the 2017 verizon dbir report states that 73% of breaches in 2016 were financially motivated and span a number of different industries and financial targets. since 2015, a financially motivated threat group known as fin7 (also referred to as the carbanak group) has emerged from the shadows and has been highlighted in a number of different incidents. this group is a moderately sophisticated and persistent adversary that has targeted various industries. in early 2017, icebrg detected and observed fin7 activity and spent some time profiling various aspects of their operations. this analysis showed that, as many others have reported, fin7 is not just a capable threat group that utilizes off the shelf capabilities to accomplish their objectives, but also adapts to meet the challenges of the environment in which they are operating. it is our hope that this information will help others dealing with the threat actors and also shine light on some recommended capabilities for response teams to better understand the mindset of their adversaries. this is part one of a two part blog series detailing icebrg s engagements with fin7 throughout early 2017. part one of this series focuses on the network command and control techniques utilized by the actors in depth. in these posts, icebrg will not disclose iocs from the campaigns, but rather focus on specific patterns that may help identify attacker activity. (part two) fin7 network command and control (c2)
while it is widely believed that the use of custom tools is a characteristic of sophisticated threat actor groups, open source and commercially available tools are easily obtained, easy to hide, and due to their widespread legitimate use, make attribution difficult. fin7 makes heavy use of these tools, involving a number of techniques throughout their operations. operational patterns
icebrg observed fin7 utilizing several types of communications to maintain a foothold in their target environment, rotating their infrastructure throughout the operation in order to stay one step ahead of response and remediation efforts. for their primary command and control (c2), fin7 utilized cobalt strike s dns c2 as their method of maintaining access inside of target environments. two separate c2 servers were utilized during the observed periods, one used heavily during initial access and a second one used more during post-exploitation activities. the authoritative dns servers for the malicious domains were geographically distributed, but all hosted within the same low-reputation virtual private server (vps) provider. the secondary c2 method leveraged a different, encrypted, communication channel. infrastructure for the secondary c2 method was also hosted on the same geographically disparate low-reputation vps provider. during the incident, icebrg observed that the attackers were consistently active between 08:00 and 23:00 gmt with peak activity at 17:00 gmt and with minimal activity outside of that window. this time window is not intended to perform any sort of attribution but was useful when planning and coordinating phases of the response effort. using these timelines, icebrg was able to identify fin7 employing different c2 techniques based on their operational patterns. before concluding operations for the day, the adversary would set their callback times to one hour, and change the mode of their communications to use a resource records (instead of txt records). this change appeared to be an attempt by the actors to maintain a lower profile by using more natural queries in the environment. further, the threat actors would spawn a secondary c2 component during their off-hour periods in an apparent attempt to maintain access should the dns c2 be detected. we will explore each of these techniques further in the following sections. cobalt strike dns c2
dns c2 leverages malicious dns txt and a rrs (resource records) queries which traverse standard recursive dns channels and terminate at an attacker s authoritative dns server. the traversal of standard dns channels make this technique effective for highly controlled environments where restrictive firewall, web filter or proxy policies are enforced; for example, in point of sale (pos) networks in the retail and hospitality sector, as well as other high-security financial transaction environments. figure 2 figure 2: example flow of dns c2 traffic
the specific c2 capabilities of cobalt strike are outlined in various blogs on their website. it should be noted that cobalt strike allows for modification of several aspects of the dns c2 channel through the malleable c2 option. in the observed operations, fin7 utilized the default communication settings present in cobalt strike without modification. this decision (or lack thereof) could be indicative of lack of tool knowledge, or a lack of necessity to do anything more to accomplish their objectives. the communications schema and components leveraged in the attack are broken out below. during the initial exploitation, and throughout the lateral spread attack phases, the actors utilized powershell scripts to deploy dns txt record stagers into memory. during execution, powershell would make iterative dns txt queries, which would return encrypted data to be concatenated and then executed in memory. these queries followed a pattern matching: emerging threats pro has a signature for this part of the cobalt strike dns c2 chain (sid 2809850) that should provide basic alerting. by monitoring for the aaa.stage.[encryptedstage]. pattern, icebrg was able to detect attacker movement in real-time, prior to confirmed control of the victim host, enabling immediate analysis of the new activity. after staging, the attacker would shift to the use of dns a resource records. when idle, the malware would make requests to the attacker controlled domain with a pattern matching [sessionid]. . by tracking the session ids in observed requests, icebrg could uniquely identify compromised hosts, and alert on any possible new compromises by identifying new session ids, even without direct visibility of hosts in certain network enclaves. additionally, using these session ids, icebrg tracked the volume of activity per id to determine which hosts appeared central to the operations of the attacker. by default, the c2 server would respond to the aforementioned a record requests with when the malware should remain inactive. by tracking dns responses of icebrg detected new attacker infrastructure even when not discovered by other heuristics, as well as tracked periods of attacker inactivity to further cement a profile of fin7 s operational habits. it should be noted that several non-malicious domains perform similar actions and this monitoring requires additional analysis for verification. when tasked with commands by the attackers that had results or output, the a resource record requests would use a pattern matching post.[encrypteddata].[randomvalue]. . by monitoring for this pattern, icebrg was able to observe data leaving the environment and, although encrypted, make rough determinations on approximate volume of data loss. dns a record c2 results in a slower data channel due to limitations in the dns specification and hampers the ability to conduct large scale data exfiltration. while the patterns presented above are specific to cobalt strike s default configuration of dns c2, aspects of this activity can be abstracted to allow for general purpose detection of malware utilizing dns command and control methods. the following characteristics may identify suspicious dns behavior (note: multiple legitimate solutions utilize similar schemes to communicate. these behaviors, like most heuristic-based analytics, will likely have high initial false positive rates, and require tuning to each environment): large txt or a resource record requests with a high entropy and a low ttl value
a record requests that receive an answer of or on a repeating or regular schedule
significant number of requests to the same suspicious domain in short bulk time periods
domains might be considered suspicious based on their age, rarity in relation to other observed networks, the number of assets communicating to the domain, and other such environment-specific correlations dns domain configuration
one unique aspect of the observed fin7 infrastructure is the configuration pattern of their c2 domain. the actors utilize a primary domain which remains parked and setup subdomains with the pattern [random hostname][1-5] (ie. www1) off of the second-level domain. the cobalt strike malware will attempt to access these subdomains in a rotational pattern. fin7 likely utilizes this structure as a method of surviving mitigation activities in the case their target takes action against a single subdomain. alternate command and control
in our observations, it is not uncommon for network defense teams to hone in on a specific threat involved in an incident, and tailor detection around known intelligence. this behavior presents a risk by potentially resulting in a failure to identify other, unobserved, attacker ttps; as the saying goes, you only know what you know . icebrg utilizes network-wide visibility to not only detect previously known patterns or iocs, but to enable analysts to hunt for new or shifting ttps. outside of fin7 s operational hours, icebrg observed the actors spawning additional connections from compromised assets to the same low-reputation vps provider used for dns c2. this encrypted connection used tcp with a destination port of 443, but was not standard tls or ssl. this non-standard traffic, when combined with reuse of similar network space, enabled icebrg to quickly identify and track the activity. these long-duration connections contained low packet sizes, approximately 90 bytes, likely a simple heartbeat for connection keep alive. lateral spread & network exploration
throughout our engagements with fin7, icebrg observed heavy use of compromised credentials, specifically domain administrator accounts, to move throughout the environment. notably, fin7 would frequently utilize the psexec_psh command within cobalt strike, which uses the rpc service controller protocol to create a service on a remote host with the binary path set to execute a malicious powershell command. fin7 showed little regard for operational security (opsec) in their lateral spread, nor caution around key assets in the environment. while it appeared as though the access to payment information was the key focus of the operations, icebrg observed the group constantly exploring other enclaves of the target environment. in one instance, icebrg observed the threat actors pivot from a remote pos environment to compromise a domain controller, then from the domain controller to assets in other corporate subnets. by monitoring flow data for key assets, icebrg detected abnormalities originating from compromised remote locations and identified odd directionality involved with credential use. conclusion
throughout our engagements with fin7, it became clear that while certain components of their operations were automated, the large majority of their activities appeared to be interactive in nature. when dealing with an interactive adversary such as this, traditional steps of the incident response process can be painstaking and require additional coordination or effort. in contrast to automated malware infections, interactive threat actors may detect and respond to containment actions, modify ttps to avoid detection, and work to stay ahead of the response team s decision making processes. in spite of this challenge, profiling and monitoring an interactive adversary allows defenders to gain insight into the attacker s thought processes, procedures, and ultimately the patterns of their behaviors and activity. by modeling and recognizing those patterns, understanding why the adversary performs certain actions, and knowing how to line up response to outperform an interactive actor, responders can complete thorough and effective mitigations of this activity. it is easy to surrender to passive, disengaged, monitoring when dealing with encrypted command and control protocols, but so much can be gained from black-box analysis of the patterns in the protocol. in these engagements, icebrg was able to profile phases of tactical action and track the adversary by understanding the specifics of their c2 protocols. we hope that this information acts a good resource for those dealing with fin7, as well as other unknown threats in their environment.
