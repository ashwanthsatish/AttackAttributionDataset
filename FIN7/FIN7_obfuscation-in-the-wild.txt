obfuscation in the wild: targeted attackers lead the way in evasion techniques
june 30, 2017 | by daniel bohannon, nick carr throughout 2017 we have observed a marked increase in the use of command line evasion and obfuscation by a range of targeted attackers. cyber espionage groups and financial threat actors continue to adopt the latest cutting-edge application whitelisting bypass techniques and introduce innovative obfuscation into their phishing lures. these techniques often bypass static and dynamic analysis methods and highlight why signature-based detection alone will always be at least one step behind creative attackers. meanwhile, fin7 has continued to wreak havoc on the restaurant, hospitality, and financial services sectors in 2017. to ensure their arsenal did not grow stale, in april 2017 fin7 shifted to using to run javascript payloads that retrieve an additional payload hidden in the phishing document by use of the word.application com object. this week, fireeye identified fin7 introducing additional obfuscation techniques at both the javascript and levels. these methods rely on fin7 s preferred method of hiding shortcut files (lnk files) in their docx and rtf phishing documents to initiate the infection. at the time of this blog, the files implementing this technique were detected by 0 antivirus engines. for javascript, instead of specifying word.application for the com object instantiation, fin7 began concatenating the string to wor + d.application . in addition, javascript s suspicious eval string was transformed into this[string.fromcharcode(101)+ va + l ] . finally, they used a little-known character replacement functionality supported by . the command is set in a process-level environment variable x , but is obfuscated with the @ character. when the x variable is echoed at the end of the script the @ character is removed by the syntax %x:@=% . figure 3 shows this command extracted from a lnk file embedded within a new fin7 phishing document. figure 3: fin7 command obfuscation from lnk file phishing document in this example, fin7 implements fin8 s passing of commands via stdin this time passing it to instead of but the evasion effect is the same. while this example will expose these arguments in the first s command execution, if this environment variable were set within the lnk or a macro and pushed to via stdin from vba, then nothing would appear on the command line. the fireeye isight intelligence mysight portal contains detailed information on these attackers and all financial and cyber espionage groups that we track including analysis of their malware, tactics, and further intelligence attribution. we fully expect targeted attackers to continue this pattern of adopting new bypass techniques and adding innovative obfuscation at both the macro and command line levels. as for what we might see next, we d recommend reading up on dos command line tricks so that monitoring your network isn t the first time you see new attacker tricks. network defenders must understand what obfuscation is possible, assess their endpoint and network visibility, and most importantly not rely on a single method to detect these attacks. this entry was posted on june 30, 2017 and filed under nick carr, daniel bohannon, obfuscation, and evasion techniques.