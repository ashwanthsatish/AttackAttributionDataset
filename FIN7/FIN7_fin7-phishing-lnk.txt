fin7 evolution and the phishing lnk april 24, 2017 | by nick carr, saravanan mohankumar, yogesh londhe, barry vengerik, dominik weber
fin7 is a financially-motivated threat group that has been associated with malicious operations dating back to late 2015. fin7 is referred to by many vendors as carbanak group , although we do not equate all usage of the carbanak backdoor with fin7. fireeye recently observed a fin7 spear phishing campaign targeting personnel involved with united states securities and exchange commission (sec) filings at various organizations. in a newly-identified campaign, fin7 modified their phishing techniques to implement unique infection and persistence mechanisms. fin7 has moved away from weaponized microsoft office macros in order to evade detection. this round of fin7 phishing lures implements hidden shortcut files (lnk files) to initiate the infection and vbscript functionality launched by to infect the victim. in this ongoing campaign, fin7 is targeting organizations with spear phishing emails containing either a malicious docx or rtf file two versions of the same lnk file and vbscript technique. these lures originate from external email addresses that the attacker rarely re-used, and they were sent to various locations of large restaurant chains, hospitality, and financial service organizations. the subjects and attachments were themed as complaints, catering orders, or resumes. as with previous campaigns, and as highlighted in our annual m-trends 2017 report, fin7 is calling stores at targeted organizations to ensure they received the email and attempting to walk them through the infection process. infection chain
while fin7 has embedded vbe as ole objects for over a year, they continue to update their script launching mechanisms. in the current lures, both the malicious docx and rtf attempt to convince the user to double-click on the image in the document, as seen in figure 1. this spawns the hidden embedded malicious lnk file in the document. overall, this is a more effective phishing tactic since the malicious content is embedded in the document content rather than packaged in the ole object. by requiring this unique interaction double-clicking on the image and clicking the open button in the security warning popup the phishing lure attempts to evade dynamic detection as many sandboxes are not configured to simulate that specific user action. figure 1: malicious fin7 lure asking victim to double click to unlock contents the malicious lnk launches with the following arguments passed to it: vbscript:execute("on error resume next:set w=getobject(,""word.application""):execute w.activedocument.shapes(2).textframe.textrange.text:close") the script in the argument combines all the textbox contents in the document and executes them, as seen in figure 2. the combined script from word textbox drops the following components: also, the script creates a named schedule task for persistence to launch 58d2a83f7778d5.36783181.vbs every 25 minutes. once a successful reply is received from the command and control (c2) server, the powershell script executes the embedded cobalt strike shellcode. if unable to contact the c2 server initially, the shellcode is configured to reattempt communication with the c2 server address in the following pattern: halfbaked backdoor variant
the halfbaked malware family consists of multiple components designed to establish and maintain a foothold in victim networks, with the ultimate goal of gaining access to sensitive financial information. this version of halfbaked connects to the following c2 server: this version of halfbaked listens for the following commands from the c2 server: info: sends victim machine information (os, processor, bios and running processes) using wmi queries
processlist: send list of process running the fireeye isight intelligence mysight portal contains additional information based on our investigations of a variety of topics discussed in this post, including fin7 and the halfbaked backdoor. click here for more information. persistence mechanism
figure 3 shows that for persistence, the document creates two scheduled tasks and creates one auto-start registry entry pointing to the lnk file. examining attacker shortcut files
in many cases, attacker-created lnk files can reveal valuable information about the attacker s development environment. these files can be parsed with lnk-parser to extract all contents. lnk files have been valuable during mandiant incident response investigations as they include volume serial number, netbios name, and mac address.
