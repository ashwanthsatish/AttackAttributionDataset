some time ago while tracking winnti group activity we came across a suspicious 64-bit sample. it was a standalone utility with the name hdd rootkit for planting a bootkit on a computer. once installed the bootkit infects the operating system with a backdoor at the early booting stage. the principles of this bootkit s work, named hdroot, have been described in the first part of our article. during our investigation we found several backdoors that the hdroot bootkit used for infecting operating systems. these backdoors are described in this part of the article. backdoors
since the backdoor installed with the use of hdroot might be arbitrary, we can t describe what malware is run by hdroot bootkit in every case where it might be found. but at least we have managed to collect two types of malware that were identified while tracking hdroot. the first one was extracted manually from the hard drives of victims where hdroot was detected and who contacted us for the help with combating the infection. another one was found in a standalone dropper that contained both hdroot and the installed backdoor. this is the malware family known as server-side derusbi, which we observed during several winnti-related incidents. usually this is a dll with the internal name and exported functions like: this list of functions can differ slightly from version to version. the main dll includes other malware components in its body, usually maintained in the xor-ciphered form: the structure for maintaining additional modules the derusbi samples installed with the use of the hdroot bootkit contained a remote shell module and network driver. the installation routine is implemented in the exported function dllregisterserver . when called, this function performs the following actions: it copies itself to the folder , with a name consisting of + three random letters, and a extension, for example , and sets the year to 2005 in the date attributes of the file.
it puts a string with its own path to the value in the registry that associates with the or wuauserv system service depending on windows version, and saves the original value of servicedll in encrypted form to the security parameter of the same registry key. it executes the malware on system startup.
after the malware service has started, it starts the original system service that was replaced, running the dynamic link library associated with the service specified in the security parameter during malware installation.
the malware stores its configuration data in encrypted form in the security value of the hklmsoftwaremicrosoftrpc registry key. it contains a unique computer identifier, and the signature for matching incoming c&c server packets. the malware can either connect to the c&c server directly if it is specified in the settings block in its body or work in listening mode if no c&c server is defined. the samples related to the hdroot bootkit we found worked in listening mode. the main malware dll decrypts, drops and runs the rootkit as a file driver at the very beginning of the process removes all registry values created during its launch and the actual driver file. the rootkit conceals malicious network activity from popular network monitoring tools by hooking the irp_mj_directory_control service routine of devicetcp or drivernsiproxy system objects. it also hides the file from user-mode applications by hooking the irp_mj_directory_control service routine of the file system driver filesystemntfs . if the malware works in listening mode, the rootkit is also engaged in the communication routines. it sniffs all incoming network packets and searches them for a specially crafted signature. if found, it redirects these packets to the listening socket opened by the main malware module. the main module creates a network socket on a random port on all network interfaces. if the rootkit pushes a network packet that matches the predefined signature, the main malware module will process it. this network packet includes command code and the module id that has to perform that command. known versions of the malware recognize five modules with different commands: as was mentioned earlier, besides a network driver there was only one additional module included in the discovered versions of the dersubi samples related to hdroot remote shell. the main malware module decrypts, drops and runs it as the file this is the dll with the internal name and one exported function r32. the library is run by executing the following command line: where <random_number> is a pre-shared value generated by the main module. the remote shell library creates two named pipes used to communicate with the main module: the command line from the operator for execution is expected to come through the pipe pipeusb<random_number>o. when this command comes a new process is created to execute it in the working directory standard input of the process that has just been created is set to be obtained from the pipe pipeusb<random_number>o, while output and stderr are redirected into the parallel pipe pipeusb<rando_number>i. this means input to the executing program comes from an operator and the program s output goes back to him, framing an effective backdoor channel. we were able to spot a sample that turned out to be a one-click installer of the backdoor with the use of hdroot. this is a win32 executable compiled on 18 november 2013 according to its data stamp in the header. the executable includes resources 102 and 103 of custom type mhm . these are the executable of hdroot installer and the installed backdoor. the role of the installed backdoor is played by the executable maintained as the resource 102 and dropped as the file (running a few steps forward we have to say that formally it s not a backdoor but a downloader.) the tool which is the resource 103 is dropped as then the dropper runs the following command line: that instructs the hdroot installer named to install the hdroot bootkit onto the hard drive where disk c: is located with subsequent running of the downloader on system start-up. there are other files specified in the dropper s body that it checks for in the file system or which the malware uses in intermediate procedures: the downloader was also compiled on 18 november 2013 like the dropper. according to the list specified in its body, it downloads files by following urls and runs them: if anything is available via these urls, it is dropped onto the disk with one of the following file names and run: the downloader checks the size of the dropped file and only runs it if it is greater than 20896 bytes. it turned out that this is a double downloader: it maintains another sample with downloading functionality in its body. the malware drops it with the file name %windir% and subsequently runs it with the parameter install . for some reason, immediately after running the 2nd downloader the malware stops the work of the internet connection sharing service with the command line: there are other files specified in the downloader s body that it checks for in the file system: this malware is able to recognize two parameters: install and remove . in the installation branch it creates the auto-starting winlogon service with the description provides automatic configuration for the 802.11 adapters and adjusted to run its own executable. the remove parameter obviously leads to the deleting of this service. while running, the service decrypts the list of urls included in its body and tries to download the content by addresses formed by appending to the urls from the list. this is a complete decrypted list of urls: as you can see, this list includes sites of legitimate and trusted parties and they are unlikely to maintain malware components. because every site is generally not malicious, some of them were probably compromised, or else the malware would not have been functional. the content is downloaded into the file %windir% . but this is only an intermediate stage. it should be a text file that is parsed by the malware. the first line of that file should contain only numbers greater than 139; if not, the malware skips processing that content. the second line is for the url the malware should use to download an executable and the third line specifies the file name for the downloaded executable that is dropped into the file system. after downloading the malware restores 2 bytes mz at the very beginning of the dropped file and runs it. at the same time as it is downloading, the malware tries to remove specific antivirus software. on finding an uninstall command line in the registry the malware runs it and by manipulating the user interface buttons of the application it tries to remove three av products: ahnlab s v3 lite, ahnlab s v3 365 clinic and estsoft s alyac. although there is a process for those products only, the malware also includes inactive functions to disable naver vaccine and mcafee security center. the origin of those vendors clearly suggests that the malware was intended for targets in south korea. since the malware is already quite old we have not been able to download any relevant material from the urls specified both in the 1st and 2nd downloaders. servers have been responding with nothing or pages stating the absence of content. earlier discovery
we were not actually the first av company to encounter hdroot malware face to face. at the end of 2013 south korean ahnlab issued a comprehensive report on the etso hacking group based on incident response cases their digital forensic team was working on. etso malware, according to ahnlab s classification, mostly corresponds to winnti malware as we detect it. during their analysis ahnlab s engineers discovered infected mbrs that, according to their description (pages 14-15, chapter 2.5 maintain network presence ), sound like the result of an hdroot bootkit installer at work: ahnlab s hdroot scheme of work also, we know about incident handlers not necessarily from av companies that are acquainted with the hdd rootkit utility. however, when it comes to detection, despite the fact that this dangerous threat is quite old, antivirus products were not that good at detecting it. statistics
as expected, hdroot infections prevail in winnti s traditional region of primary interest south east asia, especially south korea, according to ksn. but other parts of the world have also been affected and the extent and impact of this threat may be significant. hdroot-related malware hits it s important to point out that the numbers don t represent the nature of the targets. it means that by simply looking at the numbers we can t see what sort of companies were attacked. hence, the map may present a different story from the reality in terms of probable damage for a particular country. for example, we were involved in mitigating an hdroot infection in two major companies in russia and the uk where the malware was discovered on multiple servers with the use of our products. in both cases, the damage due to infection could be very significant, especially in russia where many of the company s customers could have been affected. however, on the map russia is shown as having suffered just a single hit, while the uk has 23 attacked systems. although we have not found many malware families installed using hdroot, and attribute known hdroot-related activity to winnti, we continue to assume that this bootkit may be used in multiple apt. we already know about an overlap in winnti activity and other apt from previous incidents. taking into account the hdroot installer s nature as a standalone tool, it s very possible that this bootkit could be in the hands of other threat actors.
