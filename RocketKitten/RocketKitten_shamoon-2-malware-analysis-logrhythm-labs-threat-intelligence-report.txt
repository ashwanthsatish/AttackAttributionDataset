shamoon 2 malware
analysis report
part 1 | logrhythm labs
april 2017 executive summary
about shamoon 2
shamoon 2 attempts to spread to other systems on the local network or active
directory domain of the victim system and overwrites or wipes fles in hardcoded
directories on each system. the malware destroys data and renders the system
inoperable, while also attempting worm-like behavior in an attempt to spread the
malware to other systems on the network.
the samples contain hardcoded domain names, usernames, and passwords,
supporting the highly targeted nature of the malware. logrhythm ai engine
rules for detecting its presence are provided in appendix b. the major fndings
of analysis of this sample are contained within this report.
shamoon, also known as disttrack, was reported to be discovered on august 12,
2012 and was identifed as worm_distrack.a1, as well as troj_wipmbr.a, by
symantec s security response team. ics-cert supplied the frst known public
report of shamoon functionality within jsar-12-241-01b2 on october 16, 2012.
this report gave written accounts of the malware s three primary components as
well as maintained a running activity log of shamoon discoveries and incidents
up until january 3, 2014. reporting was found linking the shamoon malware to
the sony pictures hack in 2014;3 however, this report was only substantiated by
one reporting agency. no further reporting was written until palo alto released a
report titled shamoon 2: return of the disttrack wiper 4 on november 30, 2016.
arstechnica subsequently published two technical articles in december detailing
additional outbreaks.5
about this report
the goal of this report is to provide actionable intelligence regarding threat
actors and the malware or other tools they use for reconnaissance, delivery,
exploitation, and so forth in order for security operations (secops) teams to
be empowered to more quickly detect and respond to this specifc threat. this
information is also intended so that secops teams can utilize the intelligence in
this report in order to set up preventative measures for the malware analyzed.
in the case of a victim of this malware, this analysis can be used to understand
the impact of the malware (e.g., what damage it may have done, lateral movement,
data exfltration, credential gathering, etc.). we also share this intelligence back to
the community to assist other researchers in their analysis of the same malware.
this threat intelligence report is based on analysis from the logrhythm labs team
in which we examine details of specifc samples of malware belonging to a family
publicly known as disttrack. the malware analyzed in this report bears many
similarities to malware used in a targeted attack named shamoon in 2012.
shamoon 2 malware analysis report
major findings a service named ntssrv, confgured to run the original
malicious installer, is created and started on the initially
infected victim. the installer attempts to enumerate other systems on
the local network or active directory domain. if connection to a system on the local network is
successful, the installer performs the following:
- attempts to log to the remote system with hardcoded
credentials and copy itself to %windir%\system32\ .
- decrypts and executes a command and control (c2)
component from its resource section, which attempts
to communicate over http with a local system
named server .
- installs a scheduled task on the remote system that
is confgured to run .
- starts the scheduled task on the remote system,
which drops a wiper component that renders the
system inoperable. if the system date of the original victim is later than
11/20/2016 8:45 pm, the installer drops the wiper
component and proceeds to overwrite fles until the
original victim system is rendered inoperable.
remediation recommendations
if the malware is successful in wiping the affected systems,
analysts can remediate this malware from a system or
network by restoring from backup. in order to prevent
future infection and lateral movement of the malware
across the enterprise, the following actions can be taken in
addition to implementing the logrhythm rules provided in
appendix b. because these mitigations have implications
across the enterprise network, it is important to assess the
impact of making these changes and ensure appropriate
policies and procedures to implement and support these
changes are evaluated. ensure the latest account credential protection is
enabled on all windows systems by verifying that
enterprise systems are kept updated with the latest
windows update software. install local administrator password solution (laps)
on the domain in order to randomize local administrator
passwords for systems in the domain. disable the remote registry service on all systems.
- note: this action can have signifcant impact on
the enterprise network and should be carefully
considered. however, the service can be disabled
temporarily and easily re-enabled when mitigation
is complete.
dropper executed
drops driver
service
set clock
back to 2012
c2 wiper
get
request
finds
local network
0.0.0.x
login with
credentials
copies itself
scheduled task
wiping day
shamoon 2 malware analysis report
analysis
shamoon 2 malware analysis report
analysis
summary
the main installer infects and destroys the initial system,
as well as infecting other systems on the local network or
active directory domain. the malware contains hardcoded
domains, usernames, and passwords for logging on to
remote systems. if the installer is successful in connecting
to the local network, it drops a communications component
that is confgured to connect to a hardcoded server name.
notably, the malware uses the same disk driver to perform
the wiping functionality as malware used in an attack named shamoon in 2012. the sample analyzed is a 32-bit version
of the malware; fle metadata for all identifed samples and
dropped fles is presented in appendix a.
analysis
the main installer contains three embedded resources
named pkcs12, pkcs7, and x509, which are encrypted
components of the malware, named to masquerade as
legitimate cryptographic objects. these resources are
decrypted and dropped on either the initially infected or
remote system, depending on the operating system and
other factors.
obfuscation and encryption
resource names, service names, and other strings are
encoded in the binary using a simple algorithm. these
strings are decoded at runtime by subtracting a value from
each character to get the corresponding ascii value. for
example, subtracting 34 from each character in rmeust results in the resource name string pkcs12 :
ascii character "r" "m" "e" "u" "s" "t"
the embedded resources themselves are xor encrypted
using a key that is decoded at runtime before decryption.
the encrypted data are stored at a particular offset within
each binary resource; the offset values are hardcoded in the
binary as encoded strings. decryption proceeds as follows: starting offset and size are decoded from the hardcoded
values in the binary
- nineteen is subtracted from the ascii value of each
character, then the resulting ascii value is converted
to an integer, e.g. kjl -> 879 (str) -> 879 (int). the decryption key is decoded in the same way
(subtracting 19 from each ascii value), but the result is a
base64 encoded value that is then decoded to result in
the fnal key. starting at the calculated offset within the resource,
each byte is xor decrypted with the decoded key as
seen in the assembly below:
figure 1: disassembly of decryption algorithm
shamoon 2 malware analysis report then attempts to create a scheduled task on
the remote system that is confgured to run the installer
component with the command line localservice . the task is created on the remote system
using the netschedulejobadd api, which only allows
specifcation of a host and at_info structure to create the
job. notably, the at_info structure does not contain a feld
for specifying a task name, resulting in a default name (e.g.
at1.job) being assigned to the scheduled task. however, the
at_info structure does allow specifcation of a start time
for the task, which the installer generates by retrieving
the system time of the remote machine and adding 90
milliseconds. following is a screenshot from a network
capture that illustrates the job creation over the network:
execution
when the analyzed sample is executed with the
parameter 2 , the sample installs itself as a service named
ntssrv on the infected host and modifes the dependencies
of the legitimate lanmanworkstation service to include the
malicious service.
after determining the subnet of the infected machine, attempts to connect to network shares on the
local network starting with the admin$ share. the malware
traverses the network incrementally by ip address starting
at 1, using hardcoded domain credentials to log on to each
system. if the installer successfully connects to another host
on the subnet, it proceeds by remotely opening that system s
registry in order to disable uac and wow64 redirection.
this allows the malware to test write permissions to the
%windir%\system32 directory, where it writes itself as and changes the timestamp of the fle to
match that of .
figure 2: job creation over the network
shamoon 2 malware analysis report
the installer then decrypts its pkcs12 resource (the
wiper component), writes the data to %windir%\ on the initially infected machine,
and changes the timestamp of the fle to match that
of . also writes a hardcoded public key to
%temp%\key8854321.pub the purpose of which was not
determined during the course of analysis. this component
is then executed with the command line %windir%\ 1 . the <flename> is chosen from
the list of hardcoded values below: figure 3: list of hardcoded values from which <flename> is chosen extracts and xor decrypts the disk
driver from its resource section, writing it to %windir%\ . the wiping component then
creates a service named drdisk that is confgured with
the driver as the kernel driver. the service is
created and then started by the wiping component using
the following commands:
the system clock is then set to a random day in august
2012 (possibly due to the license expiration of the original
driver, although this is unconfrmed). then
begins overwriting fles on the system, starting with
user directories and followed by the system directory
%windir%\system32.
figure 4: illustration of the modifed system time and service creation
shamoon 2 malware analysis report
if the previously described remote connection is
successful, decrypts the communications
component contained within its pkcs7 resource, writes
it to %windir% , and changes the
timestamp of the fle to match that of .
when executed with the command line %windir%\ 1 , the communications component
searches for a machine on the local subnet with the
hostname server . if found, the component connects to
port 80 and performs the following get request, where the shinu= argument contains encoded system information:
get
due to the hardcoded wiping date of 11/20/2016, the
malware is unlikely to spread successfully to other
machines, because the initial victim is wiped within
minutes of infection. unless the disk driver installation
is unsuccessful, the system is wiped before the infection
can spread to other hosts. however, if the malware is
able to retrieve the fle inf_usbvideo324.pnf from the c2
server, this hardcoded date could be altered to a future
date. this fle is saved to %windir%\inf\usbvideo324.
pnf. the following pseudocode illustrates the check for
this fle, which contains an alternate day and year for the
scheduled wiping, followed by the hardcoded values and
the modifcation of the system time.
figure 5: pseudocode for setting wiping date and checking system time
shamoon 2 malware analysis report
prevention and remediation
shamoon 2 malware analysis report
prevention and remediation
prevention
in order to prevent future infection and lateral movement of
the malware across the enterprise, the following actions can
be taken in addition to implementing the logrhythm rules
provided in appendix b. because these mitigations have
implications across the enterprise network, it is important
to assess the impact of making these changes and ensure
appropriate policies and procedures to implement and
support these changes are evaluated.
the shamoon malware does not rely on exploiting
application or operating system vulnerabilities to
be successful.6 instead, it uses hardcoded windows
active directory credentials and weak domain security
confgurations to infect and spread across the enterprise.
prevention of this type of attack requires hardening of the
security policy on the network. following are examples of
security measures that should be implemented and how
each prevents attacks such as shamoon:
1. ensure the latest account credential protection is
enabled on all windows systems by verifying that
enterprise systems are kept updated with the latest
windows update software. microsoft s 2871997 update7
(released may 13th, 2014) improves account credential
security, making credential dumping attacks less
successful. this helps to prevent the harvesting of
domain credentials that can be used for subsequent
attacks and lateral movement across a domain.
2. on may 1, 2015, microsoft made the local administrator
password solution (laps) software available for
download.8 when installed, laps makes the elevation
of local credentials to domain credentials more diffcult
by ensuring the local administrator account password
is not reused on every domain system. this prevents
lateral movement by an attacker using the same
credentials to logon to multiple systems.
3. disable the remote registry service on all systems.9
shamoon relies on the remote registry system to
disable user account control on the remote target,
allowing the malware to install itself in the %windir%\
system32 directory and create a scheduled task
without alerting the user.
remediation
if the malware is successful in wiping the affected systems,
analysts can remediate this malware from a system or
network only by restoring from backup.
conclusion
the shamoon malware campaign began in 2012 and reemerged with a new, modifed version of the 2012 samples
in november 2016. in that month, there were two targeted
waves of attacks that attempted to wipe systems across
networks of multiple saudi arabian industries. a third wave
of attacks occurred in january of 2017, again targeting
saudi arabian industries. although the responsible actors
for the third wave of attacks are presumed to be the
same, the malware was updated with more sophisticated
functionality such as encryption, anti-debugging, and
process hollowing techniques.10
intelligence gained from security researchers investigating
these waves of attacks suggests that the shamoon campaign
is ongoing. research published by kaspersky11 reports
that a new wiper (which they have named stonedrill) was
discovered in europe, suggesting that the actor group may
be expanding their operations beyond the middle east. for
this reason, logrhythm threat research will continue to
monitor shamoon activity, and report on the analysis of any
future discoveries.
