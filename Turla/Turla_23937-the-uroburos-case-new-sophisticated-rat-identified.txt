11/11/2014, author: paul rascagn res
the uroburos case: new sophisticated rat identified
agent.btz s successor, comrat, shows that the campaign is still active
in february 2014, the experts of the g data securitylabs published an analysis of uroburos, the rootkit with russian roots. we explained that a link exists between uroburos and the agent.btz malware, which was responsible for "the most significant breach of u.s. military computers ever." [1] nine months later, after the buzz around uroburos, aka snake or turla, we now identified a new generation of agent.btz we dubbed it comrat and, by now, analyzed two versions of the threat (v3.25 and v3.26). as reported earlier this year, agent.btz used the same encoding key and the installation log file name as uroburos. comrat, in its version 3.25, shows the same behavior. furthermore, the attackers also shared a c&c domain. the latest version of comrat known to us (v3.26) uses a new key and does not create the installation log file, in order to complicate the analysis and to disguise the link between the two cases. another very interesting fact: the attackers use com object hijacking, the same persistence mechanism as compfun, which we described recently. taken everything into consideration, the indications we saw during our analyzes lead to the supposition that the group behind agent.btz and uroburos is still active and is pursuing the agent.btz path once more to improve and change the rat. dropper
the analyzed file is the latest version we identified: v3.26. the version identification is described in the chapter log files . the major difference between this version and the older version(s) will be described there. file installation
the first task of the malware is to install the file credprov.tlb in %appdata%\microsoft\. this file is the main payload of the malware. the dropper executes the following command in order to install a second file: the second file is shdocw.tlp. the two files are microsoft windows dynamic libraries. persistence
to be started during the boot process of the infected machine, the malware creates the following registry key: this registry key is used to associate the library shdocvw.tlp to the object 42aedc87-2188-41fd-b9a3-0c966feabec1 as previously explained in the article about compfun. the purpose is to load the library into each and every process executed on the infected system. dropper s log file
if the version of the malware is older than 3.26, the dropper creates an additional file called winview.ocx. we noticed that the file name is still the same as the file name used by agent.btz in the past. the file is xored with the following obfuscation key (used by both, uroburos and agent.btz):
e can notice that the malware checks if an older version is installed on the system and if this is the case, the dropper removes the older version. in contrast to this, in our uroburos analysis, we found out that uroburos does not install itself in case a version of agent.btz was found on a system. execution flow and features
during the startup of the infected machine, the shdocvw.tlp library is loaded into all processes. if the process is , this library will load the other library called credprov.tlb. this library is the real payload. its features are common for a remote administration tool (rat): command execution;
file download;
file upload;
information gathering.
comrat s communication to the command and control server is performed by the browser process and not by in order to avoid being blocked by a firewall on the system or any additional security products. the communication between the processes is performed by named pipe. log files
two log files are created during the malware execution: mskfp32.ocx and msvcrtd.tlb. if the malware version is older than 3.26, the xored key is the same as the dropper key. concerning the version 3.26, the malware uses a new non-ascii key.
here is an example of decoded log file for the version 3.26: we can identify the version of the malware thanks to the pver flag. the command and control server information is stored in the registry, not in an xml, and encoded: hkey_current_user\software\microsoft\windows\currentversion\explorer\sessionmru\iplace for example, in the analyzed sample the cc is: weather- . this domain is far from unknown, as it has been mentioned in bae system s uroburos (aka snake) analysis paper as c&c server domain for the uroburos malware. another connection between the cases.
if the malware version in lower than 3.26, the xml log file contains the command and control server information:
summary
let us summarize the similarities and differences between agent.btz, uroburos and comrat as far as we can:
similarities: use of the same xor key
use of the same file name for the log on all versions: some parts of the code are exactly the same (appears to be copy & paste)
that is the reason why the sample is detected as uroburos (aka turla). the same code was used by agent.btz and also the dll loaded into userland during the uroburos analysis.
command and control server domains are shared between uroburos and comrat. differences: in version 3.26, the author changed the key and remove the known file name
this action can be an indication for the developer s effort to hide this connection
the main difference is the design
agent.btz is a common rat, a simple library executed on an infected machine. comrat is more complex and cleverer. the malware is loaded into each and every process of the infected machine and the main part (payload) of the malware is only executed in . furthermore, the c&c communication blends into the usual browser traffic and the malware communicates to the browser by named pipe. it is by far a more complex userland design than agent.btz.
these differences, mainly the more complex design, lead us to give this malware a new name. the analyzed dropper of v3.25 has a compilation date of february 6th 2014. the more recent dropper of v3.26, which has all the mentioned changes implemented, reveals a compilation date of january 3rd 2013. we suspect that this date is spoofed in order to disguise that this is in fact a newer version. conclusion
this analysis shows that even after the uroburos publication in february 2014, the group behind this piece of malware seems to be still active. in any case, the comrat developers implemented new mechanisms, changed keys, removed log files to hide their activities and tried to disguise the connections between the rat comrat, the rootkit uroburos and the rat agent.btz as much as possible. however, we can still follow the evolution of the malware by comparing the versions. the persistence mechanism discovered in october 2014 makes it possible to intrude into a system in a really discreet manner and we estimate that other actors will use the same persistence mechanism in the near future. we will definitely keep our ears and eyes open and continue analyzing.
