
targeting for this new malware is consistent with previous campaigns conducted by turla, focusing on foreign ministries and other governmental organizations throughout europe. popularity of the malware, however, is much lower than icedcoffee, with victim organizations numbering in the single digits as of january 2017. we assess with high confidence this new javascript will be used more heavily in the future as a stage 1 delivery mechanism and victim profiler. the malware is fairly simplistic but flexible in its functionality, running a standard batch of profiling commands on the victim and also allowing the actors to run arbitrary commands via wscript. actor profile
turla, also known as snake / uroburos / venomous bear and krypton is a russian-speaking apt group that has been active since at least 2007. its activity can be traced to many high-profile incidents, including the 2008 attack against the us central command, (see buckshot yankee incident) or more recently, the attack against ruag, a swiss military contractor. the turla group has been known as an agile, very dynamic and innovative apt, leveraging many different families of malware, satellite-based command and control servers and malware for non-windows oses. targeting ukraine, eu-related institutions, governments of eu countries, ministries of foreign affairs globally, media companies and possibly corruption related targets in russia, the group intensified their activity in 2014, which we described in our paper epic turla. during 2015 and 2016 the group diversified their activities, switching from the epic turla waterhole framework to the gloog turla framework, which is still active. they also expanded their spear phishing activities with the skipper / whiteatlas attacks, which leveraged new malware. recently, the group has intensified their satellite-based c&c registrations ten-fold compared to their 2015 average. decoy document used in the attack the lure document above shows an official letter from the qatar embassy in cyprus to the ministry of foreign affairs (mofa) in cyprus. based on the name of the document (national day reception (dina mersine bosio ambassador s secretary).doc, it is presumed it may have been sent from the qatar ambassador s secretary to the mofa, possibly indicating turla already had control of at least one system within qatar s diplomatic network. the document contains a malicious macro, very similar to previous macros used by turla in the past to deliver wipbot, skipper, and icedcoffee. however, the macro did contain a few modifications to it, mainly the xor routine used to decode the initial javascript and the use of a marker string to find the embedded payload in the document. new xor routine
below is a snippet of the new xor routine used to decode the initial javascript payload. turla has consistently changed the values used in this routine over the last year, presumably to avoid easy detection: malicious obfuscated javascript payload this file is then executed using wscript.shell.run() with a parameter of npefprz4aqnh1yugwqd0 . this parameter is an rc4 key used in the next iteration of decoding detailed below. the only function of is to decode the third layer payload stored in the javascript file as a base64 string. this string is base64 decoded, then decrypted using rc4 with the key supplied above as a parameter ( npefprz4aqnh1yugwqd0 ). the end result is yet another javascript which is passed to the eval() function and executed. third layer javascript
the third layer payload is where the c2 beaconing and system information collection is performed. this js will begin by copying itself to the appropriate folder location based on the version of windows running: persistence
next, it will establish persistence on the victim by writing to the following registry key: profiling
after establishing its persistence, it will then execute a series of commands on the victim system using /c and store them to a file named ~ , in the same folder where is located: systeminfo
net view
net view /domain
tasklist /v
gpresult /z
netstat -nao
ipconfig /all
arp -a
net share
net use
net user
net user administrator
net user /domain
net user administrator /domain
set
dir %systemdrive%users*.*
dir %userprofile%appdataroamingmicrosoftwindowsrecent*.*
dir %userprofile%desktop*.*
tasklist /fi modules eq tasklist /fi modules ne dir %programfiles(x86)% dir %programfiles% dir %appdata%
once the information is collected into the temporary ~ file, the javascript reads its contents into memory, rc4 encrypts it with the key , and deletes the file after a 1 second sleep, virtually eliminating storage of victim information on disk and only having an encrypted version in memory. network communications
with the victim info stored in encrypted form in memory, the javascript then will perform the necessary callback(s) to the c2 servers which are hard coded in the payload. the addresses seen in this payload were as follows: http://soligro[.]com/wp-includes/pomo/db.php
http://belcollegium[.]org/wp-admin/includes/class-wp-upload-plugins-list-table.php
it should be noted that the above domains appear to have been compromised by the actor based on the locations of the php scripts. kopiluwak: a new javascript payload from turla belcollegium[.]org a legitimate website compromised and used for c2 victim data is sent to the c2 servers in the form of a post request. the headers of the post request contain a unique user-agent string that will remain the same per victim system. the user-agent string is created by performing the following steps: concatenate the string krmlt0g3phdyjnem + <system_name> + <user name> use the above string as input to the following function (system name and user name have been filled in with example data test and admin ): the function above will produce a unique uid consisting of a 16-digit number with the string krmlt0g3phdyjnem appended to the end. in the example above using the system name test and user name admin , the end result would be 2356406508689132krmlt0g3phdyjnem prepend the string user-agent: , mozilla/5.0 (windows nt 6.1; win64; x64); to the result from the last step. this will now be the unique user-agent value for the victim callbacks. in this example, the final result will be user-agent: , mozilla/5.0 (windows nt 6.1; win64; x64); 2356406508689132krmlt0g3phdyjnem . the post request will contain the unique user-agent string above as one of the headers and also the base64 encoded version of the rc4 encrypted victim data collected earlier. the c2 will respond in one of four ways after the post request:
in the case of an answer of good , the javascript will then sleep for a random amount of time, ranging from 3600-3900 seconds. the exit command will cause script to exit gracefully, thus shutting down the communications to the c2 server until next startup / login from the user. the fail command is for uninstalling the javascript and its persistence. both the file and registry key created for persistence will be deleted upon receipt of this command. the work command is used to task the victim s system to run arbitrary commands via wscript.shell.run(). it begins by checking to see if a file mailform.pif exists in the same directory as the javascript, and if so, it will delete it. the victim will then send a post request to the c2 much in the same way as before with the beacon traffic, but with some slight differences. the user-agent header will remain the same as in the beacon traffic, but the data sent to the c2 will consist of the 4-byte string work . if the response from the server after this acknowledgement is 200 ok , then the system will proceed to read the response data into memory, rc4 encrypt it using the same key , then write it out to the mailform.pif file referenced above. the command file is run, the javascript will sleep for 30 seconds, and then the file is subsequently deleted. victims and sinkholing
one of the domains involved in this new malware (soligro[.]com) expired in july 2016 and was was available for purchase and sinkhole at the time of the analysis. sinkhole data shows several potential victims, with one high profile victim ( ) located within the greek parliament: the majority of connections to the sinkhole server have been observed from ip ranges residing within greece. this leads us to believe the main target for the specific document above was greece, although we also have indications of targeting in romania and qatar based on other data. conclusions
in recent months, the turla actors have increased their activity significantly. the addition of kopiluwak to their already existing icedcoffee javascript payload indicates the group continues to evolve and deliver new tools to avoid detection by known malware signatures. currently, it seems the turla actors continue to rely heavily on embedded macros in office documents. while this may appear to be an elementary technique to use for such a sophisticated actor, they are repeatedly successful in compromising high value targets with this method. it is advised that users disable macros in their enterprise and not allow the user to enable said content unless absolutely necessary. furthermore, using the polymorphic obfuscation technique for the macros has caused difficulties in writing signatures for detection. apt javascript macros turla