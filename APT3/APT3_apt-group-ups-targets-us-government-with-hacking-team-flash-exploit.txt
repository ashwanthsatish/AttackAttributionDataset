
on july 8, 2015, unit 42 used the autofocus threat intelligence service to locate and investigate activity consistent with a spear-phishing attack targeting the us government. the attack exploited an adobe flash vulnerability that stems from the zero-day vulnerabilities exposed from this month s hacking team data breach. the spear-phishing attack used a link to a flash exploit hosted on two subdomains of a legitimate website, perrydale[.]com; rpt.perrydale[.]com and report.perrydale[.]com. both domains resolve to the same ukraine-based ip . there are no indications at this time that the actual website has been compromised, rather, this is more likely a case of dns hijacking. the flash exploits, specifically located at rpt.perrydale[.]com/en/ and report.perrydale[.]com/ema/ leverage one of the newly disclosed vulnerabilities from the hacking team data breach, cve-2015-5119. successful exploitation leads to the affected host retrieving a secondary payload, , also located at the same two subdomains as the flash exploit. this attack shares similarities with a previous targeted attack, also using a flash exploit, leveraging what was at the time a zero-day vulnerability in cve-2015-3113. analysis of both malicious flash files indicates both these attacks are attributed to the apt group known as ups or apt3. actionscript
the malicious flash file named contains actionscript that attempts to exploit a vulnerability and execute shellcode to ultimately install a payload. is composed of the following actionscript classes: preliminary analysis of class names revealed overlap with one of the two flash zero-day exploits disclosed following the hacking team breach. when comparing the classes above with those associated with hacking team s flash zero-days, we found that , , , and were shared within and hacking team s flash exploit. in addition, there are several log messages as well as multiple function and variable names that exist in the actionscript classes in both the ups and the hacking team s flash files. the most important overlap occurs in the tryexpl function within , where the same functions and variables are used to create the use-after-free condition caused during the exploitation of the cve-2015-5119 vulnerability. figure 1 shows the code in the tryexpl function that causes the use-after-free vulnerability found in both the ups and the hacking team s flash exploits. also, the error message can t cause uaf is found in both exploits. while analyzing the mainclass portion of , we also observed shared functions with a previous attack attributed to ups that was designed to exploit an earlier flash zero-day, cve-2015-3113. the cve-2015-3113 actionscript is publically available and can be obtained from the following link: the shared function names, seen below, include several functions used for data type manipulation, logging, and decrypting the shellcode executed in the event of successful exploitation: the most obvious overlap between the two actionscripts involves the shared variable name m_sckey , which is a variable that stores the rc4 key that the actionscript will use to decrypt the shellcode. shellcode
when the flash vulnerability is successfully exploited, shellcode executes which then extracts and decrypts a payload embedded in an animated gif image. during analysis, unit 42 was unable to obtain the payload; the file received was not weaponized as it does not contain an encrypted payload. there are two likely reasons for this ups is known for both only serving malicious payloads within very limited windows of time during an attack, and even then only serving those payloads to victims that fit their desired profile. the technique of extracting and decrypting a payload from within an animated gif image was also used by ups in the attacks exploiting cve-2015-3113. using zynamic s bindiff tool to compare, we discovered 99% similarity with 99% confidence between the 5119 shellcode and the 3113 shellcode. by manually comparing the code, we confirmed the high similarity and confidence rates as calculated by bindiff. the technique of locating the payload embedded in the animated gif is the same within both the 5119 and the 3113 shellcodes. additionally, both shellcodes use the exact same algorithm and key values to decrypt the payload from ciphertext to cleartext, specifically using an xor, subtraction and a second xor instruction using key values 0x12, 0x11 and 0x85, respectively. in fact, we compared the two shellcodes side-by-side and found that there is only one instruction added to the 5119 shellcode as seen highlighted in red in the image below. primary secondary conclusion
these attacks highlight how sophisticated apt groups such as ups can quickly leverage new vulnerabilities in their attacks. a patch is available for this vulnerability, but was only released on the same day of weaponization, which leaves very little time for any organization to patch effectively. due to the highly targeted nature of this type of attack, traditional detection methods via known iocs can be challenging. deployment of automated, behavioral preventative measures such as palo alto networks traps can significantly reduce organizational risk to these types of attacks.
