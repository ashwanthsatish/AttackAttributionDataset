sofacy group s parallel attacks
by bryan lee and robert falcone
june 6, 2018 at 5:00 am
category: unit 42 tags: autoit, carberp, dealerschoice, ministry of foreign affairs, sofacy, zebrocy summary the sofacy group remains a persistent global threat. unit 42 and others have shown in the first half of 2018 how this threat actor group continues to target multiple organizations throughout the world with a strong emphasis on government, diplomatic and other strategic organizations primarily in north america and europe. following up our most recent sofacy research in february and march of 2018, we have found a new campaign that uses a lesser known tool widely attributed to the sofacy group called zebrocy. zebrocy is delivered primarily via phishing attacks that contain malicious microsoft office documents with macros as well as simple executable file attachments. this third campaign is consistent with two previously reported attack campaigns in terms of targeting: the targets were government organizations dealing with foreign affairs. in this case however the targets were in different geopolitical regions. an interesting difference we found in this newest campaign was that the attacks using zebrocy cast a far wider net within the target organization: the attackers sent phishing emails to a an exponentially larger number of individuals. the targeted individuals did not follow any significant pattern, and the email addresses were found easily using web search engines. this is a stark contrast with other attacks commonly associated with the sofacy group where generally no more than a handful of victims are targeted within a single organization in a focus-fire style of attack. in addition to the large number of zebrocy attacks we discovered, we also observed instances of the sofacy group leveraging the dynamic data exchange (dde) exploit technique previously documented by mcafee. the instances we observed, however, used the dde exploit to deliver different payloads than what was observed previously. in one instance the dde attack was used to deliver and install zebrocy. in another instance, the dde attack was used to deliver an open-source penetration testing toolkit called koadic. the sofacy group has leveraged open source or freely available tools and exploits in the past but this is the first time that unit 42 has observed them leveraging the koadic toolkit. links to previous attacks in our february report, we discovered the sofacy group using microsoft office documents with malicious macros to deliver the sofacycarberp payload to multiple government entities. in that report, we documented our observation that the sofacy group appeared to use conventional obfuscation techniques to mask their infrastructure attribution by using random registrant and service provider information for each of their attacks. in particular, we noted that the sofacy group deployed a webpage on each of the domains. this is odd because attackers almost never set up an actual webpage on adversary c2 infrastructure. even stranger, each webpage contained the same content within the body. since that report, we continued our research into this oddity. using this artifact, we were able to pivot and discover another attack campaign using the dealerschoice exploit kit with similar victimology to what we saw in february. continuing to use this artifact, we discovered another domain with the same content body, supservermgr[.]com. this domain was registered on december 20, 2017 and within a few days was resolving to 92.222.136[.]105, which belonged to a well-known vps provider often used by the sofacy group. unfortunately, at the time of collection, the c2 domain had been sinkholed by a third party. based on dynamic and static analysis of the malware sample associated with the supservermgr[.]com domain however, we were able to determine several unique artifacts which allowed us to expand our dataset and discover additional findings. first, we determined the sample we collected, d697160ae was attempting to communicate to its c2 at hxxp://supservermgr[.]com/sys/upd/pageupd.php to retrieve a zebrocy autoit downloader. because the domain had been sinkholed, this activity could not be completed. however, we were able determine a unique, hard-coded user agent used for the c2 communications: using autofocus, we pivoted from the user agent string to expand our data set to three additional zebrocy samples using the exact same user agent. this led us to additional infrastructure for zebrocy at 185.25.51[.]198 and 185.25.50[.]93. at this point we had collected nearly thirty samples of zebrocy in relation to the original sample and its associated c2 domain. additional pivoting based on artifacts unique to this malware family expanded our dataset to hundreds of samples used over the last several years. most of the additional samples were the delphi and autoit variants as reported by eset. however, several of the collected samples were a c++ variant of the zebrocy downloader tool. in addition, we discovered evidence of a completely different payload in koadic being delivered as well. also, we found the ip address 185.25.50[.]93 hosting c2 services for a delphi backdoor that eset s report states is the final stage payload for these attacks. a maltego chart diagramming the relational analysis we performed is below: please note this is not a comprehensive chart of all zebrocy and koadic samples we were able to collect. only samples mentioned or relevant to the relational analysis have been included. we observed several samples of zebrocy using this user agent targeting the foreign affairs ministry of a large central asian nation. pivoting off of this artifact provided us additional zebrocy samples. one sample in particular, cba5ab65a used yet another unique user agent string in combination with the previous user agent for its c2: a malware sample using two separate unique user agent strings is uncommon. a closer examination of the tool revealed the second user agent string was from a secondary payload that was retrieved by the cba5ab65a sample. pivoting from the mozilla v5.1 user agent revealed over forty additional zebrocy samples, with several again targeting the same central asian nation. two samples specifically, 25f0d1cbc and 115fd8c61 provided additional artifacts we were able to pivot from to discover weaponized documents to deliver zebrocy as well as a koadic. examining the use of the unique user agents strings over time shows that while previously only the mozilla/5.0 user agent was in use, since mid 2017 all three user agent strings have been used by the zebrocy tool for its c2 communications. dde documents the two weaponized documents we discovered leveraging dde were of particular interest due to victimology and a change in tactics. while examining 25f0d1cbc , we were able to pivot from its c2 220.158.216[.]127 to gather additional zebrocy samples as well as a weaponized document. this document (85da72c7d ) appears to have been targeting a north american government organization dealing with foreign affairs. it leveraged dde to retrieve and install a payload onto the victim host. a decoy document is deployed in this attack, with the contents purporting be a publicly available document from the united nations regarding the republic of uzbekistan. the creator of the weaponized document appended their dde instructions to the end of the document after all of the decoy contents. when the document is opened in word, the instructions are not immediately visible, as word does not display these fields contents by default. as you can see in the following screenshot, simply attempting to highlight the lines in which the dde instructions reside does not display them. enabling the toggle field codes feature reveals the dde instructions to us and shows that the author had set instructions to size 1 font and with a white coloring. the use of a white font coloring to hide contents within a weaponized document is a technique we had previously reported being used by the sofacy group in a malicious macro attack. the dde instructions attempt to run the following the following command on the victim host, which attempts to download and execute a payload from a remote server: the unused command above appears to be related to previous attacks, specifically attacks that occurred in november 2017 as discussed by mcafee and eset. the payload delivered in these november 2017 attacks using dde enabled documents was sofacycarberp, which differs from the zebrocy downloader delivered in the february 2018 attacks. 115fd8c61 was another zebrocy sample we were able to pivot from by gathering additional samples connecting to its c2 86.106.131[.]177. the additional samples targeted the same large central asian nation state as previously mentioned but more interestingly, one of the samples was a weaponized document also leveraging dde and containing a non-zebrocy payload. the payload turned out to be an open source penetration test toolkit called koadic. it is a toolkit similar to metasploit or powershell empire and is freely available to anyone on github. the contents above use the dde functionality in microsoft word to run a powershell script to download the koadic payload from a remote server, save it as an executable file on the system and then execute the payload. conclusion the sofacy group continues their targeted attack campaigns in 2018. as mentioned in this blog, sofacy is carrying out parallel campaigns to attack similar targets around the world but with different toolsets. the zebrocy tool associated with this current strain of attacks is constructed in several different forms based on the programming language the developer chose to create the tool. we have observed delphi, autoit, and c++ variants of zebrocy, all of which are related not only in their functionality, but also at times by chaining the variants together in a single attack. these attacks are still largely perpetrated via spear phishing campaigns, whether via simple executable attachments in hopes that a victim will launch the file to using a previously observed dde exploitation technique. palo alto networks customers are protected from zebrocy and koadic attacks by: all known zebrocy samples have a malicious verdict in wildfire
autofocus customers can track this campaign with the following tags:
zebrocy
koadic on february 19, 2018, we saw a spear phishing email sent to a foreign affairs organization within a central asian country, which attempted to delivered an attached zebrocy downloader (5b5e80f63 ) written in the delphi programming language. this downloader obtained a second downloader, which in this case was very similar in functionality but was written in c++ instead of delphi. this variation of the zebrocy downloader begins by gathering the serial number for the storage volume with the label c:\ and the computer name. it then creates an invisible window (0x0 pixel) in the bottom right corner of the screen, which will call the main function of the trojan. the main function of the trojan interacts with its configured c2 server to obtain additional code to execute. the main function gets pertinent strings to communicate with its c2 by calling a sub-function with a specific number that the sub-function uses as a case within a switch statement to decrypt the desired string. for instance, here are the resulting decrypted strings from each of the case statements (dd7e69e1 ): case string decrypted the trojan uses raw sockets to communicate with its c2 server and uses the decrypted string above to create http requests. it starts by calling this specific sub-function with an argument of 1 to get the ip address for the c2 to connect. it then calls the subfunction with the argument of 2 to get the string that it will use as the http post request. the main function then calls the subfunction with the argument 3 to get the post data parameter ( porg ) along with the volume serial number and computer name and will send this data to the c2 via the http post request. the resulting http post request looks like the following: we have not seen a c2 server respond to our requests during our analysis, however, we do know how the trojan will parse the c2 s response for specific data. -1 deletes the buffer and exits the trojan. 009 deletes the buffers and exits the trojan. if neither of the above values are found at the beginning of the http response, the trojan checks the c2 response for the ascii representation of hexadecimal bytes. the trojan will convert these hexadecimal bytes to their binary values and write them to a file and will run the file using the open function using the shellexecutew api function. we have seen the following http post parameters within the zebrocy c++ samples: porg structone oq volume dde details the author of the dde document used in the february 2018 attacks used some obfuscation techniques in an attempt to evade detection. first, the dde instructions heavily rely on the quote field, which converts decimal values to their ascii equivalent character. also, the author capitalized the e in the dde command to evade case sensitive signatures. lastly, the author bolded the dd characters within the dde command, which breaks the string up within the xml of the docx file ( ) to make signature development difficult, as seen here: 