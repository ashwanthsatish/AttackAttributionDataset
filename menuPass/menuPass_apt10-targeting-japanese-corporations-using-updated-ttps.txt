introduction
in july 2018, fireeye devices detected and blocked what appears to be apt10 (menupass) activity targeting the japanese media sector. apt10 is a chinese cyber espionage group that fireeye has tracked since 2009, and they have a history of targeting japanese entities. in this campaign, the group sent spear phishing emails containing malicious documents that led to the installation of the uppercut backdoor. this backdoor is well-known in the security community as anel, and it used to come in beta or rc (release candidate) until recently. part of this blog post will discuss the updates and differences we have observed across multiple versions of this backdoor. attack overview
the attack starts with microsoft word documents containing a malicious vba macro being attached to spear phishing emails. although the contents of the malicious documents are unreadable (see figure 3), the japanese titles are related to maritime, diplomatic, and north korean issues. table 1 shows the uppercut indicators of compromise (iocs). government recommendations from the liberal democratic party s comprehensive strategic maritime subcommittee invitation to lecture by guatemalan ambassador north korean interior swayed by the approach of the united states for the north korean lure, a news article with an identical title was readily available online. it s also worth noting that in the guatemalan lure, the attacker used an unusual spelling of guatemala in japanese. the top result of a google search using the same spelling led us to the event website for the lecture of the guatemalan ambassador, held in august 2018. figure 1 shows the screenshot of the event page. figure 2 shows the macro function that displays the lure document. at the bottom of this function, we can see the readable text that matches the contact information found in figure 1. thus, people who would have an interest in latin american issues may have been the targets of this campaign. the initial word documents were password protected, likely in an effort to bypass detection. once the password (delivered in the body of the email) is entered, the users are presented with a document that will request users to enable the malicious macro, as shown in figure 3. 4. the macro launches the legitimate executable . the executable sideloads the malicious dll ( ), which decrypts and runs shellcode (3f2e3ab9) located in the same folder.
the shellcode decodes and decompresses another dll, which is an updated variant of uppercut. before decoding the dll, the shellcode uses an anti-debug technique based on ntdll_ntsetinformationthread which causes the thread to be detached from the debugger, as shown in figure 6. the dll is then loaded into memory and the randomly named exported function is called. figure 6: anti-debug technique used by shellcode 5. the macro deletes the initially dropped .txt files using windows and changes the document text to an embedded message. the complete attack overview is shown in figure 7. several threat actors leverage the technique of using windows for payload decoding, and apt10 continues to employ this technique. evolution of uppercut
figure 8 shows the timeline of updates for uppercut. the pe compile time of loaders and the create time of droppers (word documents) are plotted in the graph. the compile time of loaders in the newer version(s) are not shown here since the timestamps are overwritten and filled with zeroes. we don t have visibility into uppercut 5.2.x series, but it s possible that minor revisions were released every few months between december 2017 and may 2018. figure 8: timeline of uppercut updates unlike previous versions, the exported function names are randomized in the latest version (table 2). encoded payload decoded payload another new feature in the latest uppercut sample is that the malware sends an error code in the cookie header if it fails to receive the http response from the command and control (c2) server. the error code is the value returned by the getlasterror function and sent in the next beacon. this was likely included to help the attackers understand the problem if the backdoor is unable to receive a response (figure 9). this cookie header is a unique indicator that can be used for network-based detection. earlier versions of uppercut used the hard-coded string this is the encrypt key for blowfish encryption when communicating with a c2. however, in the latest version, the keys are hard-coded uniquely for each c2 address and use the c2 s calculated md5 hash to determine which key to use, as shown in figure 10. for instance, table 3 lists the hard-coded c2 addresses, their md5 hash, and the corresponding blowfish key in the decoded payload of . another difference in the network traffic generated from the malware is that the encoded proxy information has been added in the url query values during the c2 communication. table 4 shows the parameters sent to c2 server from the backdoor in the newer versions. these are sent via post request, as shown in figure 9. additionally, the command string is hashed using the same rgph hashing algorithm as before. two more commands, 0xd290626c85fb1ce3 and 0x409c7a89cff0a727, are supported in the newer versions (table 5). capture the desktop screenshot in png format and send it to c2 none of the above the received buffer is executed via and the output is then sent to the c2 server table 5: supported commands conclusion while apt10 consistently targets the same geolocation and industry, the malware they use is actively evolving. in the newer versions of uppercut, there is a significant change in the way backdoor initializes the blowfish encryption key, which makes it harder for analysts to detect and decrypt the backdoor s network communications. this shows that apt10 is very capable of maintaining and updating their malware. to mitigate the threat, users are advised to disable office macros in their settings and not to open documents from unknown sources. fireeye multi-vector execution (mvx) engine is able to recognize and block this threat with the following detection names:
