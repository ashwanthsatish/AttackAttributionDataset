
in 2016, from september through november, an apt campaign known as menupass targeted japanese academics working in several areas of science, along with japanese pharmaceutical and a us-based subsidiary of a japanese manufacturing organizations. in addition to using plugx and poison ivy (pivy), both known to be used by the group, they also used a new trojan called chches by the japan computer emergency response team coordination center (jpcert). in contrast to plugx and pivy, which are used by multiple campaigns, chches appears to be unique to this group. an analysis of the malware family can be found later in this blog. interestingly, the chches samples we observed were digitally signed using a certificate originally used by hackingteam and later part of the data leaked when they were themselves hacked. wapack labs also observed a similar sample targeting japan in november. it s not clear why the attackers chose to use this certificate, as it was old, had been leaked online, and had already been revoked by the time they used it. digital certificates are typically used because they afford an air of legitimacy, which this one definitely does not. the attackers spoofed several sender email addresses to send spear phishing emails, most notably public addresses associated with the sasakawa peace foundation and the white house. all the spear phishes were socially engineered with subjects appropriate for the target and the apparent sender. one of the more interesting subject lines was used in the white house attack; [unclassified] the impact of trump s victory to japan, sent two days after the election. most of the attacks against academics involved webmail addresses using names of academics but are not tied to those academics openly online. however, all the spear phish recipients used email addresses tied to them online. fig1 figure 1. recent menupass activity and some ties to older infrastructure the c2 infrastructure in these attacks is largely actor registered, with only a few dynamic domain name system (ddns) domains. menupass typically makes use of a mix of ddns and actor-registered domains in their attack campaigns. all of the related hashes and c2s are in appendix at the end of this blog. ties to menupass
there is not much public information about the apt campaign called menupass (also known as stone panda and apt10). a paper from fireeye in 2013 on several campaigns using pivy included menupass as one of them. a later blog added some additional details. the group name is derived from one of the passwords they use with pivy in their attacks. believed to have started activity in 2009 and to originate from china, the group initially was known for targeting us and overseas defense contractors but broadened their targeting as time passed. they have targeted japanese organizations since at least 2014. the newer chches malware family uses an import hash ( ) shared with other tools used by menupass, affording an initial link. however, the ties are most strongly proved through infrastructure analysis, which shows a number of links between the newer infrastructure used in these attacks and older infrastructure publicly associated with the group. the three circled domains represent c2s publicly reported as tied to menupass, linked to domains not previously publicly reported as associated. these are only a few of multiple overlaps analysts can find while researching menupass infrastructure. the circled known domains are the first three below: two of these domains can further be tied into the newer c2 infrastructure. again, these are only a few of the overlaps that can be uncovered by analyzing the infrastructure used by menupass. the domains in the below figure are: figure 3. ties between new and older infrastructure. additionally, the passwords in the pivy samples also fit known passwords used by the group three samples use menupass and the other uses keaidestone. with these data points, we assess with high confidence the recent attacks were conducted by the menupass group. following is our analysis of the chches malware family. malware analysis
for this analysis, unit 42 looked at the following file: this malware is provided with an icon that appears to be that of a microsoft word document, as we can see in the image below. additionally, we discovered that the samples identified in attacks against japanese organizations were digitally signed using the certificate originally used by the italian-based company, hackingteam. readers may recall that hackingteam was compromised and subsequently had a large amount of internal data exposed in july 2015. this data included a wealth of code used by the organization, including certificates. the certificate in question was fairly old, and expired on august 4th, 2012. on july 10th, 2015, the certificate was revoked. multiple instances of malware have been discovered using this certificate since it was originally leaked in 2015. it is unclear why the actors decided to use this certificate that is tied to known malicious samples for their own samples. one possibility may be to make attribution more difficult for analysts researching these threats. when the malware is initially run, it will first decrypt an embedded stub of code within the malware prior to executing it. this stub has many characteristics seen in shellcode, and begins by creating a new import address table (iat). this new iat is then referenced throughout the remainder of the code when calling windows apis. the following snippet of assembly shows the newly created iat being referenced to call various functions, such as getprocessheap, rtlallocateheap, rtlreallocateheap, and internetreadfile. after the iat has been generated, the malware will determine the path of %temp% and set its current working directory to this value. chches proceeds to collect the following information about the victim: note that in the string above, the 3618468394 and 1.4.1 strings are hardcoded within the malware itself. these may indicate versions of the malware or campaign identifiers, however, this has not been confirmed. after this data has been aggregated, it is uploaded to a hardcoded command and control (c2) server via http. the data is embedded within the cookie http header, as seen belowfig8 the uri used above is randomly generated for each http request made by chches. the data embedded within the cookie header is encrypted using a unique technique. for each key/value pair, separated by a ; , the malware will first perform a md5 hash of the key, and extract the middle 16 bytes. the value is base64-decoded after the string is unquoted. finally, the base64-decoded data is decrypted using rc4 with the previously obtained 16 bytes. all of the data is concatenated to form the final, decrypted data. the following python code shows an example of decoding the supplied cookie field: decrypted, we see the following contents stored within the cookie field: bb331106210b6364c the first character of b signifies that this is the second request, and the remaining data is the 16 bytes previously seen in the c2 response within the set-cookie header. at this stage, the c2 server is expected to return content in the following format: [middle md5][base64-encoded data][middle md5] the middle md5 field contains the middle 16 bytes of the md5 hash of the b331106210b6364c string. this would result in a string of 500089dadf52ae0b in this particular example. the base64-encoded data field contains a fairly complex structure that will store a module that is to be loaded and subsequently run by chches. a visualization of this network communication can be seen in the following figure: fig10 figure 10. network flow of chches chches acts as an initial infiltration point on a victim machine. it has the ability to load additional code that in turn may accomplish any number of tasks. during analysis, no c2 servers were found to be active, and unit 42 was unable to identify any modules being loaded by chches. however, the jpcert also recently analyzed this family and was able to collect modules that give chches the following functions: encryption of communication by aes
execute shell command
uploading and downloading files
loading and executing the dll
task list of bot command
however, the lack of persistence built into chches suggests that it by itself is not intended to run on a victim s machine for long periods of time. in a successful intrusion, it may be only a first stage tool used by the attackers to orient where they landed in a network, and other malware will be deployed as a second stage layering for persistence and additional access as the attackers move laterally through a network. conclusion
these attacks show japan continues to be a target of interest to apt campaigns. menupass has targeted individuals and organizations in japan since at least 2014, and as the same organizations and academics were largely targeted each month in these attacks, it further shows menupass is persistent in attempts to compromise their targets. menupass also heavily favors spear phishing, and so takes steps to socially engineer their spear phishes for maximum appearance of legitimacy. this, and their persistence, highlights the need for training and awareness of spear phishing on the part of both individuals and organizations likely to be targeted. menupass is an ongoing apt campaign with a broad range of targets and will likely continue to target japan in the future. palo alto networks customers are protected from these malware families and c2 infrastructure by: all c2 domains are flagged as malicious in threat prevention and pan-db
all three families are properly tagged malware by wildfire. autofocus subscribers can learn more about each family via their tags:
chches
poison ivy
plugx
additionally, autofocus subscribers can learn more about menupass by exploring tied activity with the menupass tag. 