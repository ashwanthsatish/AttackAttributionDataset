the dukes r&d finds a new anti-analysis technique by robert falcone and micah yates
september 9, 2016 at 8:53 am
category: unit 42 tags: anti-analysis, dukes, threat research threat actors constantly hunt for evasion and anti-analysis techniques in order to increase the success rate of their attacks and to lengthen the duration of their access on a compromised system. in some cases, threat groups use techniques they find discussed on the internet during their operations, such as the office test persistence method that the sofacy group found within a blog published in 2014. while analyzing a recent attack that occurred on august 10, 2016, we observed an interesting anti-analysis technique used by the dukes threat group (aka apt29, cozybear, office monkeys) that we had not seen in the past. the use of the anti-analysis technique that we will discuss in this blog confirms that this threat group continually researches new anti-analysis techniques. malicious macro
in an attack that occurred on august 10, 2016, the dukes group used a malicious ole file (sha256: ), specifically an excel spreadsheet (.xls) that contained a macro that drops and executes a malicious payload. the malicious payload is a dynamic link library (dll) that the macro saves to the following location: once the dll is saved to the system, the macro executes the payload using the following command line: the #2 in the command above signifies the exported function within the dll that the rundll32 application will treat as the entry point of the dll. in this case, the rundll32 application will call the exported function at ordinal 2 instead of using an exported function name. anti-analysis trick
calling exported functions by ordinal is not a new or unique technique by any means, but this is where the story gets interesting. using the exported functions by ordinal meant the exported function name was unnecessary, which allowed the developer of this dll to leave the names for the exported functions blank, as seen in the orange box in figure 1. what is the significance of leaving these exported function names blank? the first and the obvious reason is that malware analysts cannot use the function names to correlate related samples. the less obvious reason is that it takes advantage of a bug in the popular ida disassembler that was recently fixed in the latest version of ida. figure 2 shows the dll opened in a recent (but not the latest) version of ida, specifically version 6.9.160222. the exports tab shows the only exported function is dllentrypoint and does not display any of the other functions with blank names. with the quickness
during our analysis, we sought to find the reason behind the discrepancy in displaying export functions between the two versions of ida. according to the release notes for ida version 6.95, the ida disassembler would not detect and would not display a dll s exported functions if the names were empty, as seen in the orange box in figure 4. this blank export name technique is an anti-analysis technique that could increase the difficulty in analysis for those malware analysts that do not have the most updated version of ida. the release notes for this version of ida were posted on august 8, 2016, which was two days before the attack delivered the payload leveraging the technique. we believe this threat group either found this bug in ida that caused the bug fix or the group monitors ida release notes for bug fixes to figure out how to make analysis difficult. while we cannot know for certain, we believe the latter to be the more plausible explanation due to the sequential order of the ida release notes and the attack date. also, the latter would suggest that the group is able to quickly find anti-analysis opportunities and deploy the techniques within their toolset. conclusion
threat groups research new techniques to evade detection and increase the difficulty needed to analyze their payloads. not all research is based on organic efforts within the threat group, as we can see from this incident that the group appears to obtain techniques from open sources on the internet. in this case, the dukes threat group knows that malware analysts tasked with reverse engineering their tools typically use the ida disassembler. it appears this group looks for ways to evade analysis tools, specifically in this case by monitoring release notes from known malware analysis tools to deploy their own countermeasures. let this be a reminder to those running older versions of ida to update in order to keep up with the threat groups anti-analysis techniques. we will continue to provide details as appropriate about this incident and the involvement of the dukes threat group, including our observations of overlap in targeted organizations and individuals, technique overlap with known dukes tool hammertoss specifically the use of images land steganography to download secondary payloads and the use of compromised servers to host c2.
