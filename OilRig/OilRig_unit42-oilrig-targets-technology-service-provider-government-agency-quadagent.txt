oilrig targets technology service provider and government agency with quadagent
bryan lee	by bryan lee and robert falcone
july 25, 2018 at 5:00 am
category: unit 42 tags: invoke-obfuscation, oilrig, quadagent, threedollars the oilrig group continues to adapt their tactics and bolster their toolset with newly developed tools. the oilrig group (aka apt34, helix kitten) is an adversary motivated by espionage primarily operating in the middle east region. we first discovered this group in mid-2016, although it is possible their operations extends earlier than that time frame. they have shown themselves to be an extremely persistent adversary that shows no signs of slowing down. examining their past behaviors with current events only seems to indicate that the oilrig group s operations are likely to accelerate even further in the near future. between may and june 2018, unit 42 observed multiple attacks by the oilrig group appearing to originate from a government agency in the middle east. based on previously observed tactics, it is highly likely the oilrig group leveraged credential harvesting and compromised accounts to use the government agency as a launching platform for their true attacks. the targets in these attacks included a technology services provider as well as another government entity. both these targets were in the same nation-state. further, the attacks against these targets were made to appear to have originated from other entities in the same country. however, the actual attackers themselves were outside this country and likely used stolen credentials from the intermediary organization to carry out their attacks. the attacks delivered a powershell backdoor called quadagent, a tool attributed to the oilrig group by both clearsky cyber security and fireeye. in our own analysis, we were able to also confirm the attribution of this tool to the oilrig group by examining specific artifacts that were reused from tools previously used by the oilrig group in addition to tactics reused from previous attacks as well. the use of script-based backdoors is a common technique used by the oilrig group as we have previously documented. however, packaging these scripts into a portable executable (pe) file is not a tactic we have seen the oilrig group use frequently. detailed analysis of quadagent and its ties to oilrig is the appendix at the end of this blog. quadagent is the 12th custom built tool that unit 42 has documented the oilrig group using for their attacks. our analysis revealed the two quadagent pe files we obtained were slightly different from each other. primarily, one used a microsoft .net framework-based dropper that also opens a decoy dialog box, which can be seen in figure 1. the other sample was a pe file generated via a bat2exe tool. the quadagent backdoors dropped onto the hosts were nearly identical to each other, with the only differences being the command and control server (c2) and randomized obfuscation. we were also able to locate a third delivery package of the quadagent backdoor as reported by clearsky cyber security. in their example, the oilrig group used a malicious macro document to deliver the backdoor, which is a tactic much more commonly used by them. a closer examination revealed the obfuscation used by the oilrig group in these quadagent samples were likely the result of using an open-source toolkit called invoke-obfuscation. this tool was originally intended to aid defenders in simulating obfuscated powershell commands to better their defenses. invoke-obfuscation has proven to be highly effective at obfuscating powershell scripts and in this case, the adversary was able to take advantage of the tool for increased chances of evasion and as an anti-analysis tactic. attack details this latest attack consisted of three waves between may and june 2018. all three waves involved a single spear phishing email that appeared to originate from a government agency based in the middle east. based on our telemetry, we have high confidence the email account used to launch this attack was compromised by the oilrig group, likely via credential theft. in the two waves (may 30 and june 3) against the technology services provider, the victim email addresses were not easily discoverable via common search engines, indicating the targets were likely part of a previously collected target list, or possibly known associates of the compromised account used to send the attack emails. the malicious attachment was a simple pe file with the filename <redacted> technical . the file appears to have been compiled using a bat2exe tool, which will take batch files (.bat) and convert them to pe (.exe) files. its sole purpose here is to install the quadagent backdoor and execute it. once the victim downloads and executes the email attachment, it runs silently with no additional decoy documents or decoy dialog boxes. the executable will drop the packaged quadagent powershell script using the filename office365dcomcheck.ps1 in addition to a vbscript file with the same filename which will assist in the execution of it. a scheduled task is also generated to maintain persistence of the payload. once the quadagent payload has executed, it will use rdppath[.]com as the c2, first via https, then http, then via dns tunneling, each being used as a corresponding fallback channel if the former fails. the wave against the government entity (june 26) also involved a simple pe file attachment using the filename . this pe was slightly different from the other attack, being compiled using the microsoft .net framework instead of being generated via a bat2exe tool and containing a decoy dialog box as shown in figure 1. the tactic of using a decoy dialog box is commonly used by multiple adversaries and is generally deployed as a method to reduce suspicion by the victim. in comparison to being silently run, a victim may be less suspicious of a dialog/error message because they are provided what appears to be a legitimate error response when attempting to open the attachment. when a file is silently run, because there is no response to the user s action, a victim may be more suspicious or curious on what actually happened. after the .net pe file has been run, we observed the same behavior as the above quadagent sample of dropping a powershell script with the filename systemdiskclean.ps1 alongside a vbscript file with the same name. the c2 techniques remained identical, with the only change being the server which became cpuproc[.]com. using rdppath[.]com as a pivot point, we collected an additional quadagent sample also communicating to this c2 (sha256: ), which was first reported by clearsky cyber security. in contrast to the two samples used in these attacks, this one did not use a pe attachment, and instead used a microsoft word document containing a malicious macro as the delivery vehicle. the use of malicious macro delivery documents is a tactic we have observed the oilrig group use repeatedly over the three years we ve been tracking them. the actual quadagent script payload used in the clearsky sample was exactly the same as the one we found in the bat2exe version used against the aforementioned technical services provider. the delivery document also used a filename that could be related to other technology services or media organizations within that same nation state, although it is inconclusive. the document also contained a lure image, similar to ones commonly found in malicious macro documents which ask the user to click on enable content as seen in figure 2. unlike many other delivery documents used by this group, there was no additional decoy content after the macro was enabled. use of open source tools in an attempt to avoid detection and as an anti-analysis tactic, the oilrig group abused an open source tool called invoke-obfuscation to obfuscate the code used for quadagent. invoke-obfuscation is freely available via a github repository and allows a user to change the visual representation of a powershell script simply by selecting the desired obfuscation techniques. invoke-obfuscation offers a variety of obfuscation techniques, and by analyzing the script we were able to ascertain the specific options in this attack. after identifying the specific options used to obfuscate quadagent, we were able to deobfuscate the powershell script and perform additional analysis. we found two obfuscation techniques applied to the script: the first one changing the representation of variables; the second one changing the representation of strings in the script. invoke-obfuscation calls the variable obfuscation technique used by the actors to obfuscate this script random case + {} + ticks, which changes all variables in the script to have randomly cased characters, to be surrounded in curly braces and to include the tick (`) character, which is ignored in by powershell. invoke-obfuscation calls the string obfuscation used by the actors to further obfuscate this script reorder, which uses the string formatting functionality within powershell to reconstruct strings from out of order substrings (ex. {1}{0} -f bar , foo ). during our analysis, we installed invoke-obfuscation and used it to obfuscate a previously collected quadagent sample to confirm our analysis. we used the two previously mentioned obfuscation options within invoke-obfuscation on this quadagent sample, which resulted in the generation of a very similar script as the office365dcomcheck.ps1 and systemdiskclean.ps1 payloads delivered in the attacks discussed in this blog. we captured the commands we ran in invoke-obfuscation in the animation in figure 3 below, which visualizes the steps the threat actor may have taken to create the payload delivered in this attack. invoke_evensmaller conclusion the oilrig group continues to be a persistent adversary group in the middle east region. while their delivery techniques are fairly simple, the various tools we have attributed as part of their arsenal reveal sophistication. in this instance, they illustrated a typical behavior of adversary groups, wherein the same tool was reused in multiple attacks, but each had enough modifications via infrastructure change, additional obfuscation, and repackaging that each sample may appear different enough to bypass security controls. a key component to always remember is that for these type of adversary groups, they will follow the path of least resistance in their attacks, as long as their mission directive is accomplished. palo alto networks customers may learn more and are protected via the following ways: wildfire classifies quadagent samples as malicious
quadagent c2 domains have been classified as malicious
autofocus customers can track quadagent via its corresponding tag
