striking oil: a closer look at adversary infrastructure
robert falcone	by robert falcone and bryan lee
september 26, 2017 at 1:00 pm
category: unit 42 tags: mimikatz, oilrig, plink, psexec, rgdoor, runningbee, twoface while expanding our research into the twoface webshell from this past july, we were able to uncover several ip addresses that logged in and directly interfaced with the shell we discovered and wrote about. investigating deeper into these potential adversary ips revealed a much larger infrastructure used to execute the attacks. we found the infrastructure was segregated into different functions for specific malicious objectives. we found some sites that were set up as credential harvesters (likely used in phishing attacks), a compromised system that was used to interact with a twoface webshell to hide the actor s location, and finally systems that interact with twoface webshell-compromised systems to provide command and control direction of those compromised systems. in addition to uncovering the attack infrastructure for this adversary, we were able to determine a significant link between the operators of the set of attacks involving twoface and another attack campaign we have published on in detail: oilrig. spoofing sites and credential harvesters
we observed the ip address 137.74.131[.]208 interacting with the twoface webshell as described in our previous blog. our investigation of the passive dns entries for this ip revealed a potential link to a credential harvesting campaign carried out by the threat group behind the twoface webshell attacks. looking into passive dns entries for the ip gave us the following domain resolutions: these domain names, on initial inspection, appear to be emulating legitimate webmail login portals, indicating that these are likely to be credential harvesters. we confirmed this as seen below: our further examination revealed that these credential harvesters were crafted to be exact replicas of the legitimate sites they were purporting to be. this is a common tactic deployed by adversaries leveraging credential harvesters to increase the chance that a user will input their credentials and decrease suspicion of nefarious activity. breaking down the intended targeting for these credential harvesters reveals interesting target grouping. owa-insss-org-ill-owa-authen[.]ml is likely intended to mimic the insss or the institute of national security studies, a thinktank for israel s national security agenda.
webmaiil-tau-ac-il[.]ml is likely intended to mimic tel aviv university, the largest university in israel.
mail-macroadvisorypartners[.]ml is likely intended to mimic macro advisory partners, a prominent strategic consulting firm that has published insights into the israel region.
webmail-tidhar-co-il[.]ml is likely intended to mimic the tidhar group, an israeli based real estate and property management company.
my-mailcoil[.]ml is likely intended to mimic bezeq international s webmail application. bezeq international is an israeli based telecommunications company providing consumer and enterprise services.
so-cc-hujii-ac-il[.]ml is likely intended to mimic the hebrew university of jerusalem which is the second oldest university in israel.
each of these organizations appear to be either israeli based or have strong israeli connections and interests. credential harvesters in general are not uncommon, but it is significant to have a grouping of region and company specific harvesters. this grouping leads us to believe that this adversary is likely to have had a specific mission to accomplish, which involved breaching specific organizations. this is in contrast to more generic credential harvesting by targeting common applications such as gmail or facebook. the relationship between the credential harvesters hosted on 137.74.131[.]208 and the interaction with twoface is still unclear at this time. we do know the operator of twoface had access to both twoface and these spoofing sites. and it is highly unlikely that it is a coincidence that these specifically designed spoofing sites were on the same infrastructure as twoface when both target the same geopolitical region. additional webshells
by analyzing additional twoface samples, as well as the traffic seen associated with twoface, we were able to find additional webshells used by this threat group. the additional webshells show that this threat group does not solely rely on twoface when deploying a webshell on a compromised web server. runningbee a second ip of high interest seen interacting with the twoface webshell was 192.155.x.x, which is owned by softlayer. this ip resolves to a domain owned by the ministry of oil of a nation-state in the middle east. the use of this ip is interesting as there are only two possibilities as to why this specific ip would be directly interfacing with the twoface shell: either it is the adversary themselves, or it has been compromised and is being used as part of the adversary infrastructure. based upon additional telemetry found in autofocus, we believe it is highly likely that this ip was indeed compromised and added to the adversary infrastructure. the telemetry revealed that this ip was not only used to interact directly with the twoface shell discussed in our previous blog, but also used to upload post-exploitation tools to another shell hosted on a middle eastern educational institution. we have named this second webshell runningbee . runningbee is a webshell that requires an actor to enter a password before running commands or uploading files to the webserver much like twoface. however, the shell itself is different from a ui and code perspective. the samples of runningbee that we identified requires the password neshanesha12 for interaction. this is notable because this same password was mentioned in cylance s operation cleaver report as a password for webshells used by one of the members of that operation. investigating runningbee activity revealed that the 192.155.x.x ip uploaded at least four additional tools to that compromised system with runningbee on it, as seen in table 1. please reference the post-exploitation tools sha256 section at the end of this blog for full hashes of the tools mentioned throughout in this blog. psexec a lightweight application part of the sysinternals package designed to execute processes on other systems and allow for interactive console access
mimikatz an open source tool designed to extract and use credential information from windows systems a command line tool part of the nt resource kit to view members of local groups on remote servers or domains
our analysis showed the specific hashes of these tools were placed on multiple other sites also containing twoface related webshells, leading us to believe that they are related to one specific adversary. based on the post-exploitation tools uploaded to runningbee and common ip addresses interacting with the shells, we found four other related webshells hosted on webservers belonging to organizations in the middle east. the tools listed in table 2 include the same tools that were uploaded to runningbee such as psexec, mimikatz and . in addition to these tools, we also discovered the existence of the remote connection tool known as putty link (plink) and a custom microsoft iis (internet information services) web server backdoor that we track as rgdoor. we believe the threat actors may have used plink to connect to additional systems on the compromised network after obtaining legitimate credentials using a tool such as mimikatz. rgdoor is an http module that the threat actors are likely loading into the iis web server to maintain an additional, backup access point should the compromised organization detect and remediate the installed webshell (e.g. twoface, runningbee) from the server. littleface as we reported in our twoface blog, the twoface shell was unique in that it was actually two webshells, where after initial authentication to a loader webshell, a secondary webshell with additional functionality was unpacked and made accessible to the operator. after gathering additional twoface loader shells, we noticed that some of these twoface loaders contained an embedded shell that differed from the twoface payload we originally found and published in our previous blog. this different shell, which we call littleface, contains much less functionality and is relatively simple compared to its twoface payload counterpart. littleface also differs from the previous twoface payloads as once it is saved to the system, it no longer requires authentication. the littleface shell does not display a web-based user interface like most webshells. instead, it is a webshell that allows the threat actor to pass commands to windows command prompt by issuing http post requests with the desired command within the c field of the posted data, as seen in the following code block that is the command handler on the webshell. the webshell will receive the commands embedded in the http post requests and hand them off to another function ( r function in the following code block) for processing. the littleface shell will execute the command ( r function seen in code block above) by creating a process and writing the desired command to the process standard input. the result of the command is provided back to the actor directly within the http response to the post request. oilrig link
while examining each of the tools that were found on the compromised sites, one specific sample of mimikatz showed evidence of a potential relationship with the oilrig campaign. as detailed in our april 2017 blog oilrig actors provide a glimpse into development and testing efforts , we were able to track an entity that appeared to be testing and iterating through different variations and versions of tools associated with the oilrig campaign. this same entity was found submitting a specific sample of mimikatz a day after testing multiple helminth samples. we observed actors uploading this specific sample of mimikatz to the twoface webshell hosted at the saudi education institution mentioned earlier in this blog, leading us to believe that there is a likely relationship between the oilrig campaign and the twoface campaign. the extent of this relationship is unknown at this time. while we cannot be absolutely certain that this is the same adversary in both attacks, we are able to ascertain that this specific entity does have access to oilrig tools and also has access to a very specific sample of mimikatz only found in this attack infrastructure. expanding on the possible relationship between twoface and oilrig, examining the tactical overlap of both attacks may also provide additional data points to link them. specifically, significant targeting overlap exists with both attacks, with multiple organizations in multiple nation states throughout the middle east region being targeted either as a final target or added as part of the attack infrastructure. one possible scenario of how twoface and oilrig are used in conjunction could be where the adversary uses the clayslide documents to deliver helminth, which is then used as an initial landing point or beachhead into the target s network. from there, the adversary may use the initial ingress point and its corresponding permissions to install the twoface webshell on accessible systems. additional post-exploitation tools such as the ones we discovered may then have been uploaded to the now compromised systems via the twoface file upload function. conclusion
as we have continued our research into operations in the middle east, we are beginning to uncover more and more overlaps between the various adversary groups and campaigns outlined by us and others in the public domain. in this incident, we were able to follow a trail starting from a single webshell to a bevy of compromised sites, credential harvesters, post-exploitation tools, and even an operational overlap with what we originally thought was an unrelated attack campaign. the middle east region has proven to be a hotbed of threat activity in recent times, with continued acceleration of pacing as well as development in the tactics and techniques used. there is no indication that this type of threat activity will cease, but with continued discovery of the adversary s playbooks, implementation of strong security policies, and effective deployment of technology, we can make it far less worthwhile for the adversary to execute their attacks.
