
mcafee advanced threat research (atr) analysts have discovered an aggressive bitcoin-stealing phishing campaign by the international cybercrime group lazarus that uses sophisticated malware with long-term impact. this new campaign, dubbed haobao, resumes lazarus previous phishing emails, posed as employee recruitment, but now targets bitcoin users and global financial organizations. when victims open malicious documents attached to the emails, the malware scans for bitcoin activity and then establishes an implant for long-term data-gathering. haobao targets and never-before-seen implants signal to mcafee atr an ambitious campaign by lazarus to establish cryptocurrency cybercrime at a sophisticated level. background
beginning in 2017, the lazarus group heavily targeted individuals with spear phishing emails impersonating job recruiters which contained malicious documents. the campaign lasted from april to october and used job descriptions relevant to target organizations, in both english and korean language. the objective was to gain access to the target s environment and obtain key military program insight or steal money. the 2017 campaign targets ranged from defense contractors to financial institutions, including crypto currency exchanges, however; much of this fake job recruitment activity ceased months later, with the last activity observed october 22, 2017. analysis
on january 15th , mcafee atr discovered a malicious document masquerading as a job recruitment for a business development executive located in hong kong for a large multi-national bank. the document was distributed via a dropbox account at the following url: this is the mark of a new campaign, though it utilizes techniques, tactics and procedures observed in 2017. this document had the last author windows user and was created january 16, 2018 with korean language resources. several additional malicious documents with the same author appeared between january 16 though january 24, 2018. document summary from virus total malicious job recruitment documents victims are persuaded to enable content through a notification claiming the document was created in an earlier version of microsoft word. the malicious documents then launch an implant on the victim s system via a visual basic macro. malicious microsoft word document implants dropped in campaign mcafee atr analysis finds the dropped implants have never been seen before in the wild and have not been used in previous lazarus campaigns from 2017. furthermore, this campaign deploys a one-time data gathering implant that relies upon downloading a second stage to gain persistence. the implants contain a hardcoded word haobao that is used as a switch when executing from the visual basic macro. malicious document analysis
the malicious document contains two payloads as encrypted string arrays embedded in visual basic macro code. the payloads are present as encrypted string arrays that are decrypted in memory, written to disk and launched in sequence (second stage malicious binary launched first and then the decoy document). the vba macro code is self-executing and configured to execute when the ole document (ms word doc) is opened (via sub autoopen() ). the autoopen() function in the vba macro performs the following tasks in the sequence listed: decodes the target file path of the second stage binary payload. this file path is calculated based on the current user s temp folder location: vb code to decrypt second stage filepath
decodes the second stage binary in memory and writes it to the %temp% file location second stage binary (mz) as an encrypted string array in the vba macro second stage binary (mz) decoded in memory by the vba macro
after writing the second stage payload to disk the vba code performs two important actions.
runs the second stage payload using . this is done so that the process exists as soon as the payload is launched. this way a process enumeration tool cannot find the parent process => smaller footprint.
cmdline for executing the second stage binary: adds persistence on the system by creating a shortcut in the user s startup folder with the correct cmdline arguments:
link file command line: <temp_dir_path> /haobao trigger code for executing the second stage binary and establishing persistence lnk file configuration for establishing persistence
once the second stage payload has been launched, the vba macro proceeds to display a decoy document to the end user. this decoy document is also stored in the vba macro as an encrypted string array (similar to the second stage payload). the decoy document is again written to the user s temp directory to the following filename/path:
<temp_dir_path>\.\job decoy document decoded in memory by the vba macro
once the decoy document has been written to disk, the vba macro sets its file attributes to system + hidden
the decoy document is then opened by the malicious vba macro and the original malicious document s caption is copied over to the decoy document to trick the end user into mistaking the decoy document for the original (malicious) document.
this activity, combined with the fact that the vba macro then closes the current (malicious) document, indicates that the vba macro aims to trick an unsuspecting user into thinking that the decoy document currently open is the original (malicious) document opened by the user.
since the decoy document is a benign file and does not contain any macros the victim does not suspect any malicious behavior.
implant analysis
as part of the implant initialization activities the implant does the following; checks the string passed to it through command line
if the malware does not find this string in its cmdline arguments, it simply quits without going any further. unwraps a dll into memory and calls its one-and-only import using reflective dll injection. dll information.
during our research, we discovered additional variants of the dll file. dll information as part of reflective dll loading the malware performs the following tasks on the dll it has unwrapped in memory:
copy the unwrapped dll into new locations in its own memory space.
build imports required by the dll (based on the iat of the dll) imports builder code in malware for the dll imports
call the newly loaded dll image s entry point (dllmain) with dll_process_attach to complete successful loading of the dll in the malware process. dll entry point call from malware to finish loading of the dll in memory
call the actual malicious export in the dll named coredn hardcoded dll export name coredn in malware
all the malicious activities described below are performed by the dll unless specified otherwise. data reconnaissance
the implant has the capability of gathering data from the victim s system. the following information will be gathered and sent to the command and control server. computer name and currently logged on user s name, stored in the format malware obtaining the computer name and user name
list of all processes currently running on the system arranged in format malware collecting process information from endpoint
the presence of a specific registry key on the system the malware appends an indicator (flag) specifying whether the above registry key was found in the user s registry: this key is checked again as part of the command and control communication and is sent as a duplicate value to the command and control in the http post request as well (explained in the below). malware checking for the presence of the registry key
exfiltration
preparation
in preparation of the exfiltration of information collected from the endpoint, the malware performs the following activities: encode the collected information using a simple byte based xor operation using the byte key: 0x34.
base64 encode (standard) the xored data.
again, check for the presence of the registry key: hkcu\software\bitcoin\bitcoin-qt command and control server communication
once the malware has performed all these activities it sends an http post request to the cnc server: where command and control server domain
persistence
the persistence mechanism of the malware is performed only for the downloaded implant. persistence is established for the implant via the visual basic macro code initially executed upon document loading by the victim. this persistence is also performed only if the malware successfully executes the downloaded implant. the malware first tries to update the hkey_local_machine registry key. if the update is unsuccessful then it also tries to update the hkey_current_user registry key. value written to registry to achieve persistence on the endpoint: registry based persistence of the second stage payload
connections to 2017 campaigns
the techniques, tactics and procedures are very similar to the campaigns that targeted us defense contractors, us energy sector, financial organizations and crypto currency exchanges in 2017. the same windows user author appeared back in 2017 in two malicious documents which were involved in crypto currency targeting. furthermore, one of the implants communicates to an ip address that was involved in hosting malicious job description documents in 2017 involving the sikorsky military program. mcafee advanced threat research determines with confidence that lazarus is the threat group behind this attack for the following reasons: contacts an ip address / domain that was used to host a malicious document from a lazarus previous campaign in 2017
same author appeared in these recent malicious documents that also appeared back in lazarus 2017 campaigns
uses the same malicious document structure and similar job recruitment ads as what we observed in past lazarus campaigns
the techniques, tactics and procedures align with lazarus group s interest in crypto currency theft
conclusion
in this latest discovery by mcafee atr, despite a short pause in similar operations, the lazarus group targets crypto currency and financial organizations. furthermore, we have observed an increased usage of limited data gathering modules to quickly identify targets for further attacks. this campaign is tailored to identifying those who are running bitcoin related software through specific system scans.
