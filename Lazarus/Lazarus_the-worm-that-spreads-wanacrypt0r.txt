the worm that spreads wanacrypt0r
posted: may 12, 2017 by zammis clark last updated: may 13, 2017 something that many security researchers have feared has indeed come true. threat actors have integrated a critical exploit taking advantage of a popular communication protocol used by windows systems, crippling thousands of computers worldwide with ransomware. within hours of being leveraged, a flaw that had been recently patched by microsoft has been used to distribute the wanacrypt0r ransomware and wreak havoc worldwide. in this blog post, we will describe the worm responsible for spreading this ransomware by looking at its capabilities and what has made this threat so successful. main functionality
wanacrypt0r has been most effective not only does the ransomware loop through every open rdp session on a system and run the ransomware as that user, but the initial component that gets dropped on systems appears to be a worm that contains and runs the ransomware, spreading itself using the eternalblue smb vulnerability (ms17-010). the winmain of this executable first tries to connect to the website . it doesn t actually download anything there, just tries to connect. if the connection succeeds, the binary exits. this was probably some kind of kill switch or anti-sandbox technique. whichever it is, it has backfired on the authors of the worm, as the domain has been sinkholed and the host in question now resolves to an ip address that hosts a website. therefore, nothing will happen on any new systems that runs the executable. this only applies to the binary with the hash listed above; there may well be new versions released in the future. update: the second argument to internetopena is 1 (internet_open_type_direct), so the worm will still work on any system that requires a proxy to access the internet, which is the case on the majority of corporate networks. thanks to didier stevens for spotting what was missed by most. after this check passes, the first thing the worm does is check the number of arguments it was launched with. if it was run with less than two arguments passed, it installs a service called mssecsvc2.0 with display name microsoft security center (2.0) service (where the binary ran is itself with two arguments), starts that service, drops the ransomware binary located in the resources of the worm, and runs it. if it was run with two arguments or more in other words, if it was run as a service execution eventually falls through to the worm function. the initialization function called first calls wsastartup() to initialize networking, then cryptacquirecontext() to initialize the crypto api so it can use a cryptographically-secure pseudo-random number generator. it then calls a function that initializes two buffers used for storing the worm payload dlls, one x86 and one x64. it copies the payload dlls from the .data section of the worm and then copies the entire worm binary after it. the code of each payload dll is very small, just getting the resource content (i.e. the worm binary), dropping to disk as (this path is actually hardcoded) and executing it. smb vulnerability leveraged to spread ransomware worldwide
after initializing the functionality used by the worm, two threads are created. the first thread scans hosts on the lan. the second thread gets created 128 times and scans hosts on the wider internet. the first thread (in charge of scanning lan) uses getadaptersinfo() to get a list of ip ranges on the local network, then creates an array of every ip in those ranges to scan. the lan scanning is multithreaded itself, and there is code to prevent scanning more than 10 ip addresses on the lan at a time. the scanning thread tries to connect to port 445, and if so creates a new thread to try to exploit the system using ms17-010/eternalblue. if the exploitation attempts take over 10 minutes, then the exploitation thread is stopped. the threads that scan the internet generate a random ip address, using either the os s cryptographically secure pseudo-random number generator initialized earlier, or a weaker pseudo-random number generator if the csprng failed to initialize. if connection to port 445 on that random ip address succeeds, the entire /24 range is scanned, and if port 445 is open, exploit attempts are made. this time, exploitation timeout for each ip happens not after 10 minutes but after one hour. the exploitation thread tries several times to exploit, with two different sets of buffers used (perhaps one for x86 and one for x64). if it detects the presence of doublepulsar after any exploitation attempt, it uses doublepulsar to load the relevant payload dll. protection
it is critical that you install all available os updates to prevent getting exploited by the ms17-010 vulnerability. any systems running a windows version that did not receive a patch for this vulnerability should be removed from all networks. if your systems have been affected, doublepulsar will have also been installed, so this will need to also be removed. a script is available that can remotely detect and remove the doublepulsar backdoor. consumer and business customers of malwarebytes are protected from this ransomware by the premium version of malwarebytes and malwarebytes endpoint security, respectively.